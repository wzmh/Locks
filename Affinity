-- ░██╗░░░░░░░██╗███████╗███╗░░░███╗██╗░░██╗
-- ░██║░░██╗░░██║╚════██║████╗░████║██║░░██║
-- ░╚██╗████╗██╔╝░░███╔═╝██╔████╔██║███████║
-- ░░████╔═████║░██╔══╝░░██║╚██╔╝██║██╔══██║
-- ░░╚██╔╝░╚██╔╝░███████╗██║░╚═╝░██║██║░░██║
-- ░░░╚═╝░░░╚═╝░░╚══════╝╚═╝░░░░░╚═╝╚═╝░░╚═╝
--[[

    ///////////////////////////////
    //  © 2022 - 2024 Affinity   //
    //    All rights reserved    //
    ///////////////////////////////
    // This material may not be  //
    //   reproduced, displayed,  //
    //  modified or distributed  //
    // without the express prior //
    // written permission of the //
    //   the copyright holder.   //
    ///////////////////////////////
    // Affinity by SKIBIDI--GYAT //
    ///////////////////////////////

]]--

if (not LPH_OBFUSCATED) then
    LPH_NO_VIRTUALIZE = function(...) return (...) end;
    LPH_JIT_MAX = function(...) return (...) end;
    LPH_JIT_ULTRA = function(...) return (...) end;
end

do
local getinfo = getinfo or debug.getinfo
local DEBUG = false
local Hooked = {}

local Detected, Kill

setthreadidentity(2)
for i, v in getgc(true) do
    if typeof(v) == "table" then
        local DetectFunc = rawget(v, "Detected")
        local KillFunc = rawget(v, "Kill")
    
        if typeof(DetectFunc) == "function" and not Detected then
            Detected = DetectFunc
            
            local Old; Old = hookfunction(Detected, function(Action, Info, NoCrash)
                if Action ~= "_" then
                    if DEBUG then
                        warn(`Adonis AntiCheat flagged\nMethod: {Action}\nInfo: {Info}`)
                    end
                end
                
                return true
            end)

            table.insert(Hooked, Detected)
        end

        if rawget(v, "Variables") and rawget(v, "Process") and typeof(KillFunc) == "function" and not Kill then
            Kill = KillFunc
            local Old; Old = hookfunction(Kill, function(Info)
                if DEBUG then
                    warn(`Adonis AntiCheat tried to kill (fallback): {Info}`)
                end
            end)

            table.insert(Hooked, Kill)
        end
    end
end

local Old; Old = hookfunction(getrenv().debug.info, LPH_NO_VIRTUALIZE(function(...)
    local LevelOrFunc, Info = ...

    if Detected and LevelOrFunc == Detected then
        if DEBUG then
            warn(`Adonis Bypassed!`)
        end

        return coroutine.yield(coroutine.running())
    end
    
    return Old(...)
end))
setthreadidentity(7)
end

function load()
    --// Services
local ThreeDrawingLibrary, Debris, EtherealParts, Players, UserInputService, Workspace, Lighting, RunService, TweenService, ReplicatedStorage, CC, LocalPlayer, Camera, Hitsounds, Sexy = loadstring(game:HttpGet("https://pastebin.com/raw/QVJPXgfV"))(),game:GetService('Debris'),Instance.new('Folder', workspace),game:GetService("Players"),game:GetService("UserInputService"),game:GetService("Workspace"),game:GetService("Lighting"),game:GetService("RunService"),game:GetService("TweenService"),game:GetService("ReplicatedStorage"),game:GetService("Workspace").CurrentCamera,game:GetService("Players").LocalPlayer,game:GetService("Workspace"):FindFirstChildWhichIsA("Camera"),{},{}
EtherealParts.Name = 'EtherealParts'


    --// Script Table
    local Script = {
        Functions = {},
        Folders = {},
        Parts = {},
        Locals = {
            Target = nil,
            IsTargetting = false,
            Resolver = {
                OldTick = os.clock(),
                OldPos = Vector3.new(0, 0, 0),
                ResolvedVelocity = Vector3.new(0, 0, 0)
            },
            AutoSelectTick = tick(),
            AntiAimViewer = {
                MouseRemoteFound = false,
                MouseRemote = nil,
                MouseRemoteArgs = nil,
                MouseRemotePositionIndex = nil
            },
            HitEffect = {
                ["Nova Impact"] = nil,
                ["Crescent Slash"] = nil,
                ["Crescent Slash"] = nil,
                ["Coom"] = nil,
                ["Cosmic Explosion"] = nil,
                ["Slash"] = nil,
                ["Atomic Slash"] = nil,
            },
            Gun = {
                PreviousGun = nil,
                PreviousAmmo = 999,
                Shotguns = {"[Double-Barrel SG]", "[TacticalShotgun]", "[Shotgun]"}
            },
            PlayerHealth = {},
            JumpOffset = 0,
            BulletPath = {
                [4312377180] = Workspace:FindFirstChild("MAP") and Workspace.MAP:FindFirstChild("Ignored") or nil,
                [1008451066] = Workspace:FindFirstChild("Ignored") and Workspace.Ignored:FindFirstChild("Siren") and Workspace.Ignored.Siren:FindFirstChild("Radius") or nil,
                [3985694250] = Workspace and Workspace:FindFirstChild("Ignored") or nil,
                [5106782457] = Workspace and Workspace:FindFirstChild("Ignored") or nil,
                [4937639028] = Workspace and Workspace:FindFirstChild("Ignored") or nil,
                [1958807588] = Workspace and Workspace:FindFirstChild("Ignored") or nil
            },
            World = {
                FogColor = Lighting.FogColor,
                FogStart = Lighting.FogStart,
                FogEnd = Lighting.FogEnd,
                Ambient = Lighting.Ambient,
                Brightness = Lighting.Brightness,
                ClockTime = Lighting.ClockTime,
                ExposureCompensation = Lighting.ExposureCompensation
            },
            SavedCFrame = nil,
            NetworkPreviousTick = tick(),
            NetworkShouldSleep = false,
            FFlags = {
      }
            ,OriginalVelocity = {},
            RotationAngle = 0
        },
        Utility = {
            Drawings = {},
            EspCache = {}
        },
        Connections = {
            GunConnections = {}
        },
        AuraIgnoreFolder = Instance.new("Folder", game:GetService("Workspace"))
    }

    --// Settings Table
    local Settings = {
        Combat = {
            Enabled = false,
            Skibidi = false,
            AimPart = "HumanoidRootPart",
            Silent = false,
            BetaAirshot = false,
            TriggerBot = {
                Enabled = false,
                Delay = 0,
                TargeyOnly = false,
                FOV = {
                    Show = true,
                    Size = 80
                }
            },
            TargetInfo = false,
            Camera = false,
            EasingStyle = "Sine",
            EasingDirection = "Out",
            Alerts = true,
            LookAt = false,
            Spectate = false,
            PingBased = false,
            UseIndex = false,
            AntiAimViewer = false,
            AutoSelect = {
                Enabled = false,
                Cooldown = {
                    Enabled = false,
                    Amount = 0.5
                }
            },
            Checks = {
                Enabled = false,
                Knocked = false,
                Crew = false,
                Wall = false,
                Grabbed = false,
                Vehicle = false
            },
            Smoothing = {
                Horizontal = 1,
                Vertical = 1
            },
            Prediction = {
                Horizontal = 0.134,
                Vertical = 0.134
            },
            Resolver = {
                Enabled = false,
                Smoothness = 0.5
            },
            Fov = {
                Visualize = {
                    Enabled = false,
                    Color = Color3.new(1, 1, 1)
                },
                Radius = 80
            },
            Visuals = {
                Enabled = true,
                Tracer = {
                    Enabled = false,
                    Color = Color3.new(1, 1, 1),
                    Thickness = 2
                },
                Dot = {
                    Enabled = false,
                    Color = Color3.new(1, 1, 1),
                    Filled = true,
                    Size = 6
                },
                Chams = {
                    Enabled = false,
                    Fill = {
                        Color = Color3.fromRGB(255,255,255),
                        Transparency = 0.5
                    },
                    Outline = {
                        Color = Color3.new(255,255,255),
                        Transparency = 0
                    }
                }
            },
            Air = {
                Enabled = true,
                AirAimPart = {
                    Enabled = false,
                    HitPart = "LowerTorso"
                },
                JumpOffset = {
                    Enabled = true,
                    Offset = 0
                }
            }
        },
        Visuals = {
            Backtrack = {
                Enabled = true,
                Color = Color3.fromRGB(255,255,255),
                Method = "Folllow",
                Transparency = 0.5,
                Material = "Plastic",
            },
            BulletTracers = {
                Enabled = false,
                Color = {
                    Gradient1 = Color3.new(1, 1, 1),
                    Gradient2 = Color3.new(0, 0, 0)
                },
                Duration = 1,
                Fade = {
                    Enabled = false,
                    Duration = 0.5
                }
            },
            BulletImpacts = {
                Enabled = false,
                Color = Color3.new(1, 1, 1),
                Duration = 1,
                Size = 1,
                Material = "SmoothPlastic",
                Fade = {
                    Enabled = false,
                    Duration = 0.5
                }
            },
            OnHit = {
                Enabled = false,
                Effect = {
                    Enabled = false,
                    Color = Color3.new(1, 1, 1)
                },
                Sound = {
                    Enabled = false,
                    Volume = 5,
                    Value = "hentai4.wav"
                },
                Chams = {
                    Enabled = false,
                    Color = Color3.fromRGB(255,255,255),
                    Material = "ForceField",
                    Duration = 1
                }
            },
            World = {
                Enabled = false,
                Fog = {
                    Enabled = false,
                    Color = Color3.fromRGB(255,255,255),
                    End = 1000,
                    Start = 10000
                },
                Ambient = {
                    Enabled = false,
                    Color = Color3.fromRGB(255,255,255)
                },
                Brightness = {
                    Enabled = false,
                    Value = 0
                },
                ClockTime = {
                    Enabled = false,
                    Value = 24
                },
                WorldExposure = {
                    Enabled = false,
                    Value = -0.1
                }
            },
            Crosshair = {
                Enabled = false,
                StickToTarget = false,
                Color = Color3.new(1, 1, 1),
                Size = 10,
                Gap = 2,
                Rotation = {
                    Enabled = false,
                    Speed = 1
                }
            }
        },
        AntiAim = {
            DaCoolBoyDesync = false,
            DaCoolBoyDesync2 = false,
            DaCoolBoyDesync3 = false,
            VelocitySpoofer = {
                Enabled = false,
                Visualize = {
                    Enabled = false,
                    Color = Color3.fromRGB(255,255,255),
                    Prediction = 0.134
                },
                Type = "Underground",
                Roll = 0,
                Pitch = 0,
                Yaw = 0
            },
            CSync = {
                Enabled = false,
                Spoof = false,
                Type = "Target Strafe",
                Visualize = {
                    Enabled = false,
                    Color = Color3.fromRGB(255,255,255)
                },
                RandomDistance = 10,
                Custom = {
                    X = 0,
                    Y = 0,
                    Z = 0
                },
                TargetStrafe = {
                    Speed = 1,
                    Distance = 1,
                    Height = 1
                }
            },
            Network = {
                Enabled = false,
                WalkingCheck = false,
                Amount = 0.05
            },
            VelocityDesync = {
                Enabled = false,
                Range = 1
            },
            FFlagDesync = {
                Enabled = false,
                SetNew = false,
                FFlags = {"S2PhysicsSenderRate"}, 
                SetNewAmount = 1,
                Amount = 1
            },
        },
        Misc = {
            Movement = {
                Macro = {
                    Enabled = false,
                    Speed = 0.1,
                },
                Speed = {
                    Enabled = false,
                    Amount = 1
                },
            },
            Exploits = {
                Enabled = false,
                NoRecoil = false,
                NoJumpCooldown = false,
                NoSlowDown = false
            }
        }
    }

getgenv().taffy_esp = {
    enabled = false,
    box = {
        boxes = false,
        boxtype = "2D",
        filled = false,
        filledColor = Color3.fromRGB(255, 255, 255),
        outline = false,
        healthbar = false,
        healthtext = false,
        healthtextcolor = Color3.new(255, 255, 255),
        color1 = Color3.fromRGB(255, 255, 255),
        color2 = Color3.fromRGB(0, 0, 0),
        healthbarcolor = Color3.fromRGB(0, 255, 0)
    },
    tracer = {
        enabled = false,
        unlocktracers = false,
        color = Color3.fromRGB(255, 255, 255)
    },
    name = {
        enabled = false,
        outline = false,
        size = 16.6,
        font = 2,
        color = Color3.fromRGB(255, 255, 255)
    },
    misc = {
        teamcheck = false,
        useteamcolors = false,
        visibleonly = true,
        target = false,
        fade = false,
        fadespeed = 4
    },  
    Toolsshow = {
        enable = false,
        outline = false,
        size = 8,
        font = 3,
        color = Color3.fromRGB(255, 255, 255)
    },
    Skeletons = {
        Enabled = false,
        Color = Color3.new(255, 255, 255)
    }
}

do
local Esp = {}

function Esp:Esp(v)
    local bones = {
        {"Head", "UpperTorso"},
        {"UpperTorso", "RightUpperArm"},
        {"RightUpperArm", "RightLowerArm"},
        {"RightLowerArm", "RightHand"},
        {"UpperTorso", "LeftUpperArm"},
        {"LeftUpperArm", "LeftLowerArm"},
        {"LeftLowerArm", "LeftHand"},
        {"UpperTorso", "LowerTorso"},
        {"LowerTorso", "LeftUpperLeg"},
        {"LeftUpperLeg", "LeftLowerLeg"},
        {"LeftLowerLeg", "LeftFoot"},
        {"LowerTorso", "RightUpperLeg"},
        {"RightUpperLeg", "RightLowerLeg"},
        {"RightLowerLeg", "RightFoot"}
    }

    function lerp(a, b, t)
        return a + (b - a) * t
    end

    local function fade(drawObject)
        local currentAlpha = drawObject.Transparency
        local lerpAlpha = taffy_esp.misc.fadespeed * 0.05

        if taffy_esp.misc.fade then
            local oscillation = (math.sin(tick() * taffy_esp.misc.fadespeed) + 1) / 2
            drawObject.Transparency = lerp(currentAlpha, oscillation, lerpAlpha)
        else
            drawObject.Transparency = 1
        end
    end
    
    local function fadeFill(drawObject)
        local currentAlpha = drawObject.Transparency
        local lerpAlpha = taffy_esp.misc.fadespeed * 0.05
    
        if taffy_esp.misc.fade then
            local oscillation = (math.sin(tick() * taffy_esp.misc.fadespeed) + 1) / 2
            local newAlpha = lerp(currentAlpha, oscillation, lerpAlpha)
            drawObject.Transparency = math.min(newAlpha, 0.3)
        else
            drawObject.Transparency = 0.3
        end
    end
    
    local BLOCKOUTLINE = nil
    local BOXPLAYER = nil
    local FILLEDBOXPLAYER = nil
    local HealthBarBackground = nil
    local HealthBarITSELF = nil
    local Cube = nil
    local HealthText = nil
    local Tracer = nil
    local Name = nil
    local toolshow = nil
    local SkeletonLines = {}
    
    RunService.PreSimulation:Connect(function()
        if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= LocalPlayer and v.Character.Humanoid.Health > 0 and (not taffy_esp.misc.teamcheck or v.TeamColor == LocalPlayer.TeamColor) and v.Character:FindFirstChild("Head") ~= nil and taffy_esp.enabled then
            local Vector, onScreen = game:GetService("Workspace").CurrentCamera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
            
            if onScreen then
                local RootPart = v.Character.HumanoidRootPart
                local Head = v.Character.Head
                local RootPosition, RootVis = game:GetService("Workspace").CurrentCamera:worldToViewportPoint(RootPart.Position)
                local HeadPosition = game:GetService("Workspace").CurrentCamera:worldToViewportPoint(Head.Position + Vector3.new(0, 1.3, 0))
                local LegPosition = game:GetService("Workspace").CurrentCamera:worldToViewportPoint(RootPart.Position - Vector3.new(0, 3.6, 0))

                if not taffy_esp.misc.target or v == Script.Locals.Target and Script.Locals.IsTargetting then
                    if taffy_esp.box.boxes and taffy_esp.enabled then
                        if taffy_esp.box.boxtype == "2D" then
                            local height = HeadPosition.Y - LegPosition.Y
                            local yOffset = 0
                            local centerHeight = LegPosition.Y + height / 2
                            local boxSize = Vector2.new(2700 / RootPosition.Z, height)
                            local boxPosition = Vector2.new(RootPosition.X - boxSize.X / 2, centerHeight - boxSize.Y / 2 + yOffset)
                    
                            
                            if not BLOCKOUTLINE then
                                BLOCKOUTLINE = Drawing.new("Square")
                                BLOCKOUTLINE.Visible = false
                                BLOCKOUTLINE.Color = Color3.new(0, 0, 0)
                                BLOCKOUTLINE.Thickness = 3
                                BLOCKOUTLINE.Transparency = 1
                                BLOCKOUTLINE.Filled = false
                            end
                    
                            if BLOCKOUTLINE then
                                BLOCKOUTLINE.Size = boxSize
                                BLOCKOUTLINE.Position = boxPosition
                                BLOCKOUTLINE.Visible = taffy_esp.box.outline
                                BLOCKOUTLINE.Transparency = 0
                                BLOCKOUTLINE.Color = taffy_esp.box.color2
                            end
                    
                            if not BOXPLAYER then
                                BOXPLAYER = Drawing.new("Square")
                                BOXPLAYER.Visible = false
                                BOXPLAYER.Color = taffy_esp.box.color1
                                BOXPLAYER.Thickness = 1
                                BOXPLAYER.Transparency = 1
                                BOXPLAYER.Filled = false
                            end
                    
                            if BOXPLAYER then
                                BOXPLAYER.Size = boxSize
                                BOXPLAYER.Position = boxPosition
                                BOXPLAYER.Visible = taffy_esp.box.boxes 
                                BOXPLAYER.Transparency = 0
                                BOXPLAYER.Color = taffy_esp.box.color1
                            end
                    
                            if Cube then
                                Cube:Remove()
                                Cube = nil
                            end
                            if taffy_esp.box.filled then
                                if not FILLEDBOXPLAYER then
                                    FILLEDBOXPLAYER = Drawing.new("Square")
                                    FILLEDBOXPLAYER.Visible = false
                                    FILLEDBOXPLAYER.Color = taffy_esp.box.filledColor
                                    FILLEDBOXPLAYER.Filled = true
                                    FILLEDBOXPLAYER.Transparency = 0.3
                                end 
                    
                                if FILLEDBOXPLAYER then
                                    FILLEDBOXPLAYER.Size = boxSize
                                    FILLEDBOXPLAYER.Position = boxPosition
                                    FILLEDBOXPLAYER.Visible = true
                                    FILLEDBOXPLAYER.Color = taffy_esp.box.filledColor
                                end
                            else
                                if FILLEDBOXPLAYER then
                                    FILLEDBOXPLAYER:Remove()
                                    FILLEDBOXPLAYER = nil
                                end
                            end
                        elseif taffy_esp.box.boxtype == "3D" then
                            if BLOCKOUTLINE then
                                BLOCKOUTLINE:Remove()
                                BLOCKOUTLINE = nil
                            end 
                    
                            if BOXPLAYER then
                                BOXPLAYER:Remove()
                                BOXPLAYER = nil
                            end
                            if FILLEDBOXPLAYER then
                                FILLEDBOXPLAYER:Remove()
                                FILLEDBOXPLAYER = nil
                            end
                            if not Cube then
                                Cube = ThreeDrawingLibrary:New3DCube()
                                Cube.Visible = false
                                Cube.ZIndex = 3
                                Cube.Transparency = 0
                                Cube.Color = Color3.fromRGB(255, 255, 255)
                                Cube.Thickness = 1
                                Cube.Filled = false
                            end
                    
                            if Cube then
                                Cube.Color = taffy_esp.box.color1
                                Cube.Size = Vector3.new(1.5, 3, 1.5)
                                Cube.Position = Vector3.new(v.Character.HumanoidRootPart.Position.X, v.Character.HumanoidRootPart.Position.Y, v.Character.HumanoidRootPart.Position.Z)
                                Cube.Visible = true
                            end
                        end
                    else
                        if BLOCKOUTLINE then
                            BLOCKOUTLINE:Remove()
                            BLOCKOUTLINE = nil
                        end
                        if BOXPLAYER then
                            BOXPLAYER:Remove()
                            BOXPLAYER = nil
                        end
                    
                        if FILLEDBOXPLAYER then
                            FILLEDBOXPLAYER:Remove()
                            FILLEDBOXPLAYER = nil
                        end
                    
                        if Cube then
                            Cube:Remove()
                            Cube = nil
                        end
                    end
                    
                    if taffy_esp.tracer.enabled and taffy_esp.enabled then
                        if not Tracer then
                            Tracer = Drawing.new("Line")
                            Tracer.Visible = false
                            Tracer.Color = Color3.new(1, 1, 1)
                            Tracer.Thickness = 1
                            Tracer.Transparency = 1
                        end

                        if taffy_esp.tracer.unlocktracers and Tracer then
                            Tracer.From = Vector2.new(LocalPlayer:GetMouse().X, LocalPlayer:GetMouse().Y + 36)
                        else
                            Tracer.From = Vector2.new(game:GetService("Workspace").CurrentCamera.ViewportSize.X / 2, game:GetService("Workspace").CurrentCamera.ViewportSize.Y / 1)
                        end

                        if Tracer then
                            Tracer.To = Vector2.new(Vector.X, Vector.Y)
                            Tracer.Visible = true
                        end
                    else
                        if Tracer then
                            Tracer:Remove()
                            Tracer = nil
                        end
                    end

                    if taffy_esp.Skeletons.Enabled and taffy_esp.enabled then
                        if #SkeletonLines == 0 then
                            for _, bonePair in ipairs(bones) do
                                local parentBone, childBone = bonePair[1], bonePair[2]
                                local skeletonLine = Drawing.new("Line")
                                skeletonLine.Color = taffy_esp.Skeletons.Color
                                skeletonLine.Thickness = 1
                                skeletonLine.Transparency = 1
                                SkeletonLines[#SkeletonLines + 1] = {skeletonLine, parentBone, childBone}
                            end
                        end
                    
                        for _, lineData in ipairs(SkeletonLines) do
                            local skeletonLine = lineData[1]
                            local parentBone, childBone = lineData[2], lineData[3]
                    
                            if v.Character and v.Character:FindFirstChild(parentBone) and v.Character:FindFirstChild(childBone) then
                                local parentPosition, parentOnScreen = game:GetService("Workspace").CurrentCamera:worldToViewportPoint(v.Character[parentBone].Position)
                                local childPosition, childOnScreen = game:GetService("Workspace").CurrentCamera:worldToViewportPoint(v.Character[childBone].Position)
                    
                                if parentOnScreen and childOnScreen then
                                    skeletonLine.From = Vector2.new(parentPosition.X, parentPosition.Y)
                                    skeletonLine.To = Vector2.new(childPosition.X, childPosition.Y)
                                    skeletonLine.Color = taffy_esp.Skeletons.Color
                                    skeletonLine.Visible = true
                                else
                                    skeletonLine.Visible = false
                                end
                            else
                                skeletonLine.Visible = false
                            end
                        end
                    else
                        for _, lineData in ipairs(SkeletonLines) do
                            local skeletonLine = lineData[1]
                            if skeletonLine then
                                skeletonLine.Visible = false
                            end
                        end
                    end
                    
                    if taffy_esp.box.healthbar and taffy_esp.enabled then
                        if not HealthBarBackground then
                            HealthBarBackground = Drawing.new("Square")
                            HealthBarBackground.Thickness = 1
                            HealthBarBackground.Filled = true
                            HealthBarBackground.Color = Color3.new(0, 0, 0)
                            HealthBarBackground.Transparency = 0.5
                            HealthBarBackground.Visible = false
                        end
                    
                        if not HealthBarITSELF then
                            HealthBarITSELF = Drawing.new("Line")
                            HealthBarITSELF.Thickness = 2
                            HealthBarITSELF.Color = taffy_esp.box.healthbarcolor
                            HealthBarITSELF.Transparency = 1
                            HealthBarITSELF.Visible = false
                        end
                    
                        if not HealthText and taffy_esp.box.healthtext then
                            HealthText = Drawing.new("Text")
                            HealthText.Text = ""
                            HealthText.Size = 15
                            HealthText.Color = Color3.new(1, 1, 1)
                            HealthText.Outline = true
                            HealthText.Center = true
                            HealthText.Visible = true
                        end
                    
                        local height = HeadPosition.Y - LegPosition.Y
                        local centerHeight = LegPosition.Y + height / 2
                        local yOffset = 0
                        local boxSize = Vector2.new(2700 / RootPosition.Z, height)
                        local boxPosition = Vector2.new(RootPosition.X - boxSize.X / 2, centerHeight - boxSize.Y / 2 + yOffset)
                        local healthPercentage = math.clamp(v.Character.Humanoid.Health / 100, 0, 1)
                        local healthBarSize = Vector2.new(4, height * healthPercentage)
                        local healthBarPosition = Vector2.new(boxPosition.X - 5, boxPosition.Y + (1 / healthBarSize.Y))
                        HealthBarBackground.Size = Vector2.new(healthBarSize.X, height)
                        HealthBarBackground.Position = Vector2.new(healthBarPosition.X, boxPosition.Y)
                        HealthBarBackground.Visible = true
                        
                        HealthBarITSELF.From = Vector2.new(healthBarPosition.X + 1, healthBarPosition.Y + 1)
                        HealthBarITSELF.To = Vector2.new(healthBarPosition.X + 1, healthBarPosition.Y + 1 + healthBarSize.Y - 2)
                        HealthBarITSELF.Visible = true
                        if taffy_esp.box.healthtext then
                            local healthTextPosition = Vector2.new(healthBarPosition.X - 18, healthBarPosition.Y + 1 + healthBarSize.Y - 4)
                            HealthText.Position = healthTextPosition
                            HealthText.Text = math.floor(v.Character.Humanoid.Health) .. "%"
                            HealthText.Color = taffy_esp.box.healthtextcolor
                            HealthText.Visible = true
                        else
                            if HealthText then
                                HealthText:Remove()
                                HealthText = nil
                            end
                        end
                    else
                        if HealthBarBackground then
                            HealthBarBackground:Remove()
                            HealthBarBackground = nil
                        end
                    
                        if HealthBarITSELF then
                            HealthBarITSELF:Remove()
                            HealthBarITSELF = nil
                        end
                    
                        if HealthText then
                            HealthText:Remove()
                            HealthText = nil
                        end
                    end
                    
                    if taffy_esp.Toolsshow.enable and taffy_esp.enabled then
                        if not toolshow then
                            toolshow = Drawing.new("Text")
                            toolshow.Transparency = 1
                            toolshow.Visible = false
                            toolshow.Color = taffy_esp.Toolsshow.color
                            toolshow.Size = 16
                            toolshow.Center = true
                            toolshow.Outline = taffy_esp.Toolsshow.outline
                            toolshow.Font = 2
                        end
            
                        if toolshow then
                            local Equipped = v.Character:FindFirstChildOfClass("Tool") and v.Character:FindFirstChildOfClass("Tool").Name or "None"
                            toolshow.Text = Equipped
                            toolshow.Position = Vector2.new((v.Character.HumanoidRootPart.Size.X / 2) + LegPosition.X, LegPosition.Y)
                            toolshow.Color = taffy_esp.Toolsshow.color
                            toolshow.Outline = taffy_esp.Toolsshow.outline
                            toolshow.Font = 3
                            toolshow.Size = 16
                            toolshow.Visible = true
                        end
                    else
                        if toolshow then
                            toolshow:Remove()
                            toolshow = nil
                        end
                    end
            
                    if taffy_esp.name.enabled and taffy_esp.enabled then
                        if not Name then
                            Name = Drawing.new("Text")
                            Name.Transparency = 1
                            Name.Visible = false
                            Name.Color = taffy_esp.name.color
                            Name.Size = 16
                            Name.Center = true
                            Name.Outline = false
                            Name.Font = 2
                        end
                        if Name then
                            Name.Text = tostring(v.Character.Humanoid.DisplayName)
                            Name.Position = Vector2.new((v.Character.HumanoidRootPart.Size.X / 2) + HeadPosition.X, HeadPosition.Y - 19)
                            Name.Visible = true
                            Name.Size = 16
                            Name.Outline = taffy_esp.name.outline
                        end
                    else
                        if Name then
                            Name:Remove()
                            Name = nil
                        end
                    end

                    if BLOCKOUTLINE then
                        fade(BLOCKOUTLINE)
                    end
                    if BOXPLAYER then
                        fade(BOXPLAYER)
                    end
                    if HealthText then
                        fade(HealthText)
                    end
                    if FILLEDBOXPLAYER then
                        fadeFill(FILLEDBOXPLAYER)
                    end
                    if HealthBarBackground then
                        fade(HealthBarBackground)
                    end
                    if HealthBarITSELF then
                        fade(HealthBarITSELF)
                    end
                    if Tracer then
                        fade(Tracer)
                    end 
                    if Name then
                        fade(Name)
                    end
                    if toolshow then
                        fade(toolshow)
                    end
                    if Cube then
                        fade(Cube)
                    end
                    for _, lineData in ipairs(SkeletonLines) do
                        if lineData[1] then
                            fade(lineData[1])
                        end 
                    end
                else
                    if BLOCKOUTLINE then
                        BLOCKOUTLINE:Remove()
                        BLOCKOUTLINE = nil
                    end
                    if BOXPLAYER then
                        BOXPLAYER:Remove()
                        BOXPLAYER = nil
                    end
                    if FILLEDBOXPLAYER then
                        FILLEDBOXPLAYER:Remove()
                        FILLEDBOXPLAYER = nil
                    end
                    if toolshow then
                        toolshow:Remove()
                        toolshow = nil
                    end
                    if HealthBarITSELF then
                        HealthBarITSELF:Remove()
                        HealthBarITSELF = nil
                    end
                    if HealthBarBackground then
                        HealthBarBackground:Remove()
                        HealthBarBackground = nil
                    end
                    if Tracer then
                        Tracer:Remove()
                        Tracer = nil
                    end
                    if Name then
                        Name:Remove()
                        Name = nil
                    end
                    if Cube then
                        Cube:Remove()
                        Cube = nil
                    end
                    if HealthText then
                        HealthText:Remove()
                        HealthText = nil
                    end
                    for _, lineData in ipairs(SkeletonLines) do
                        if lineData[1] then
                            lineData[1]:Remove()
                            SkeletonLines = {}
                        end
                    end
                end
            else
                if toolshow then
                    toolshow:Remove()
                    toolshow = nil
                end
                if BLOCKOUTLINE then
                    BLOCKOUTLINE:Remove()
                    BLOCKOUTLINE = nil
                end
                if HealthText then
                    HealthText:Remove()
                    HealthText = nil
                end
                if BOXPLAYER then
                    BOXPLAYER:Remove()
                    BOXPLAYER = nil
                end
                if FILLEDBOXPLAYER then
                    FILLEDBOXPLAYER:Remove()
                    FILLEDBOXPLAYER = nil
                end
                if HealthBarITSELF then
                    HealthBarITSELF:Remove()
                    HealthBarITSELF = nil
                end
                if HealthBarBackground then
                    HealthBarBackground:Remove()
                    HealthBarBackground = nil
                end
                if Tracer then
                    Tracer:Remove()
                    Tracer = nil
                end
                if Name then
                    Name:Remove()
                    Name = nil
                end
                if Cube then
                    Cube:Remove()
                    Cube = nil
                end
                for _, lineData in ipairs(SkeletonLines) do
                    if lineData[1] then
                        lineData[1]:Remove()
                        SkeletonLines = {}
                    end
                end
            end
        else
            if toolshow then
                toolshow:Remove()
                toolshow = nil
            end
            if BLOCKOUTLINE then
                BLOCKOUTLINE:Remove()
                BLOCKOUTLINE = nil
            end
            if BOXPLAYER then
                BOXPLAYER:Remove()
                BOXPLAYER = nil
            end
            if FILLEDBOXPLAYER then
                FILLEDBOXPLAYER:Remove()
                FILLEDBOXPLAYER = nil
            end
            if HealthText then
                HealthText:Remove()
                HealthText = nil
            end
            if HealthBarITSELF then
                HealthBarITSELF:Remove()
                HealthBarITSELF = nil
            end
            if HealthBarBackground then
                HealthBarBackground:Remove()
                HealthBarBackground = nil
            end
            if Tracer then
                Tracer:Remove()
                Tracer = nil
            end
            if Name then
                Name:Remove()
                Name = nil
            end
            if Cube then
                Cube:Remove()
                Cube = nil
            end
            for _, lineData in ipairs(SkeletonLines) do
                if lineData[1] then
                    lineData[1]:Remove()
                    SkeletonLines = {}
                end
            end
        end
    end)
end

for _, Player in pairs(game:GetService("Players"):GetChildren()) do
    Esp:Esp(Player)
end

Players.PlayerAdded:Connect(function(v)
    Esp:Esp(v)
end)
end

local HitStyleThing = "Coom"
local crosshair = loadstring(game:HttpGet("https://pastebin.com/raw/9x1TSjAK"))()
local NEINIGGANEINEI
local WOAHHH
do
local TriggerBotTarget
local TriggerBotFovCircle = Drawing.new("Circle")
TriggerBotFovCircle.Color = Color3.fromRGB(100,0,0)
TriggerBotFovCircle.Visible = Settings.Combat.TriggerBot.FOV.Show and Settings.Combat.TriggerBot.Enabled
TriggerBotFovCircle.Filled = false
TriggerBotFovCircle.Radius = Settings.Combat.TriggerBot.FOV.Size*3
TriggerBotFovCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)

function UpdateFOVCuh()
TriggerBotFovCircle.Color = Color3.fromRGB(100,0,0)
TriggerBotFovCircle.Visible = Settings.Combat.TriggerBot.FOV.Show and Settings.Combat.TriggerBot.Enabled
TriggerBotFovCircle.Filled = false
TriggerBotFovCircle.Radius = Settings.Combat.TriggerBot.FOV.Size*3
TriggerBotFovCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
end
local IgnoreList = {LocalPlayer.Character, Camera}
local function PartTrigguhVisible(Part)
    if Part and Part.HumanoidRootPart then
        local Hit = workspace:FindPartOnRayWithIgnoreList(
            Ray.new(Camera.CFrame.Position, Part.HumanoidRootPart.Position - Camera.CFrame.Position), IgnoreList)
        if Hit and Hit:IsDescendantOf(Part) then
            return true
        end
        return false
    else
        return true
    end
end
local function LocateTheseNiggas()
    local closestPlayer
    local closestDistance = math.huge
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            if not Settings.Combat.TriggerBot.TargetOnly or player == Script.Locals.Target and Script.Locals.IsTargetting then
            local part = player.Character.HumanoidRootPart
            local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
            if onScreen then
                local distanceToCenter = (TriggerBotFovCircle.Position - Vector2.new(screenPos.X, screenPos.Y)).Magnitude

                if PartTrigguhVisible(player.Character) and distanceToCenter < closestDistance and distanceToCenter <= TriggerBotFovCircle.Radius then
                    closestPlayer = player
                    closestDistance = distanceToCenter
                end
            end
        end
        end
    end
    return closestPlayer
end

RunService.PreSimulation:Connect(function()
    TriggerBotTarget = LocateTheseNiggas()
    UpdateFOVCuh()
    if Settings.Combat.TriggerBot.Enabled then
    if TriggerBotTarget and LocalPlayer.Character:FindFirstChildWhichIsA("Tool") ~= nil then
    task.wait(Settings.Combat.TriggerBot.Delay)
    LocalPlayer.Character:FindFirstChildOfClass("Tool"):Activate()
    end
    end
end)
end


local ZPred = tonumber(Settings.Combat.Prediction.Horizontal)

local placemarker = Instance.new("Part", game.Workspace)
    spawn(function()
        placemarker.Anchored = true
        placemarker.CanCollide = false
        placemarker.Size = Vector3.new(0, 0, 0)
        placemarker.Transparency = 1
    end)
function makemarker(Parent, Adornee, Color, Size, Size2)
    local e = Instance.new("BillboardGui", Parent)
    e.Name = "PP"
    e.Adornee = Adornee
    e.Size = UDim2.new(Size, Size2, Size, Size2)
    e.AlwaysOnTop = true
    local a = Instance.new("Frame", e)
    a.Size = UDim2.new(0.5, 0, 0.5, 0)
    a.BackgroundTransparency = 0
    a.BackgroundColor3 = Color
    local z = Instance.new("UIStroke", a)
    z.Thickness = 1.5
    z.Color = Color3.new(0,0,0)
    local g = Instance.new("UICorner", a)
    g.CornerRadius = UDim.new(30, 30)
    return(e)
end

makemarker(placemarker, placemarker, Color3.fromRGB(255,255,255), 0.8, 0)



    --// Functions
    do
        --// Utility Functions
        do
            Script.Functions.WorldToScreen = function(Position: Vector3)
                if not Position then return end

                local ViewportPointPosition, OnScreen = Camera:WorldToViewportPoint(Position)
                local ScreenPosition = Vector2.new(ViewportPointPosition.X, ViewportPointPosition.Y)
                return {
                    Position = ScreenPosition,
                    OnScreen = OnScreen
                }
            end

            Script.Functions.Connection = function(ConnectionType: any, Function: any)
                local Connection = ConnectionType:Connect(Function)
                return Connection
            end

            Script.Functions.MoveMouse = function(Position: Vector2, SmoothingX: number, SmoothingY: number)
                local MousePosition = UserInputService:GetMouseLocation()

                mousemoverel((Position.X - MousePosition.X) / SmoothingX, (Position.Y - MousePosition.Y) / SmoothingY)
            end

            Script.Functions.CreateDrawing = function(DrawingType: string, Properties: any)
                local DrawingObject = Drawing.new(DrawingType)

                for Property, Value in pairs(Properties) do
                    DrawingObject[Property] = Value
                end
                return DrawingObject
            end

            Script.Functions.WallCheck = function(Part: any)
                local RayCastParams = RaycastParams.new()
                RayCastParams.FilterType = Enum.RaycastFilterType.Exclude
                RayCastParams.IgnoreWater = true
                RayCastParams.FilterDescendantsInstances = Script.AuraIgnoreFolder:GetChildren()

                local CameraPosition = Camera.CFrame.Position
                local Direction = (Part.Position - CameraPosition).Unit
                local RayCastResult = workspace:Raycast(CameraPosition, Direction * 10000, RayCastParams)

                return RayCastResult.Instance and RayCastResult.Instance == Part
            end

            Script.Functions.Create = function(ObjectType: string, Properties: any)
                local Object = Instance.new(ObjectType)

                for Property, Value in pairs(Properties) do
                    Object[Property] = Value
                end
                return Object
            end

            Script.Functions.GetGun = function(Player: any)
                local Info = {
                    Tool = nil,
                    Ammo = nil,
                    IsGunEquipped = false
                }

                local Tool = Player.Character:FindFirstChildWhichIsA("Tool")

                if not Tool then return end

                if game.GameId == 1958807588 then
                    local ArmoryGun = Player.Information.Armory:FindFirstChild(Tool.Name)
                    if ArmoryGun then
                        Info.Tool = Tool
                        Info.Ammo = ArmoryGun.Ammo.Normal
                        Info.IsGunEquipped = true
                    else
                        for _, Object in pairs(Tool:GetChildren()) do
                            if Object.Name:lower():find("ammo") and not Object.Name:lower():find("max") then
                                Info.Tool = Tool
                                Info.IsGunEquipped = true
                                Info.Ammo = Object
                            end
                        end
                    end
                elseif game.GameId == 3634139746 then
                    for _, Object in pairs(Tool:getdescendants()) do
                        if Object.Name:lower():find("ammo") and not Object.Name:lower():find("max") and not Object.Name:lower():find("no") then
                            Info.Tool = Tool
                            Info.Ammo = Object
                            Info.IsGunEquipped = true
                        end
                    end
                else
                    for _, Object in pairs(Tool:GetChildren()) do
                        if Object.Name:lower():find("ammo") and not Object.Name:lower():find("max") then
                            Info.Tool = Tool
                            Info.IsGunEquipped = true
                            Info.Ammo = Object
                        end
                    end
                end


                return Info
            end

            Script.Functions.Beam = function(StartPos: Vector3, EndPos: Vector3)
                local ColorSequence = ColorSequence.new({
                    ColorSequenceKeypoint.new(0, Settings.Visuals.BulletTracers.Color.Gradient1),
                    ColorSequenceKeypoint.new(1, Settings.Visuals.BulletTracers.Color.Gradient2),
                })
                local Part = Instance.new("Part", Script.AuraIgnoreFolder)
                Part.Size = Vector3.new(0, 0, 0)
                Part.Massless = true
                Part.Transparency = 1
                Part.CanCollide = false
                Part.Position = StartPos
                Part.Anchored = true
                local Attachment = Instance.new("Attachment", Part)
                local Part2 = Instance.new("Part", Script.AuraIgnoreFolder)
                Part2.Size = Vector3.new(0, 0, 0)
                Part2.Transparency = 0
                Part2.CanCollide = false
                Part2.Position = EndPos
                Part2.Anchored = true
                Part2.Material = Enum.Material.ForceField
                Part2.Color = Color3.fromRGB(255, 0, 212)
                Part2.Massless = true
                local Attachment2 = Instance.new("Attachment", Part2)
                local Beam = Instance.new("Beam", Part)
                Beam.FaceCamera = true
                Beam.Color = ColorSequence
                Beam.Attachment0 = Attachment
                Beam.Attachment1 = Attachment2
                Beam.LightEmission = 6
                Beam.LightInfluence = 1
                Beam.Width0 = 1.5
                Beam.Width1 = 1.5
                Beam.Texture = "http://www.roblox.com/asset/?id=446111271"
                Beam.TextureSpeed = 2
                Beam.TextureLength = 1
                task.delay(Settings.Visuals.BulletTracers.Duration, function()
                    if Settings.Visuals.BulletTracers.Fade.Enabled then
                        local TweenValue = Instance.new("NumberValue")
                        TweenValue.Parent = Beam
                        local Tween = TweenService:Create(TweenValue, TweenInfo.new(Settings.Visuals.BulletTracers.Fade.Duration), {Value = 1})
                        Tween:Play()

                        local Connection
                        Connection = Script.Functions.Connection(TweenValue:GetPropertyChangedSignal("Value"), function()
                            Beam.Transparency = NumberSequence.new(TweenValue.Value, TweenValue.Value)
                        end)

                        Script.Functions.Connection(Tween.Completed, function()
                            Connection:Disconnect()
                            Part:Destroy()
                            Part2:Destroy()
                        end)
                    else
                        Part:Destroy()
                        Part2:Destroy()
                    end
                end)
            end

            Script.Functions.Impact = function(Pos: Vector3)
                local Part = Script.Functions.Create("Part", {
                    Parent = Script.AuraIgnoreFolder,
                    Color = Settings.Visuals.BulletImpacts.Color,
                    Size = Vector3.new(Settings.Visuals.BulletImpacts.Size, Settings.Visuals.BulletImpacts.Size, Settings.Visuals.BulletImpacts.Size),
                    Position = Pos,
                    Anchored = true,
                    Material = Enum.Material[Settings.Visuals.BulletImpacts.Material]
                })

                task.delay(Settings.Visuals.BulletImpacts.Duration, function()
                    if Settings.Visuals.BulletImpacts.Fade.Enabled then
                        local Tween = TweenService:Create(Part, TweenInfo.new(Settings.Visuals.BulletImpacts.Fade.Duration), {Transparency = 1})
                        Tween:Play()

                        Script.Functions.Connection(Tween.Completed, function()
                            Part:Destroy()
                        end)
                    else
                        Part:Destroy()
                    end
                end)
            end

            Script.Functions.GetClosestPlayerDamage = function(Position: Vector3, MaxRadius: number)
                local Radius = MaxRadius
                local ClosestPlayer

                for PlayerName, Health in pairs(Script.Locals.PlayerHealth) do
                    local Player = Players:FindFirstChild(PlayerName)
                    if Player and Player.Character and Player ~= LocalPlayer then
                        local PlayerPosition = Player.Character.PrimaryPart.Position
                        local Distance = (Position - PlayerPosition).Magnitude
                        local CurrentHealth = Player.Character.Humanoid.Health
                        if (Distance < Radius) and (CurrentHealth < Health) then
                            Radius = Distance
                            ClosestPlayer = Player
                        end
                    end
                end
                return ClosestPlayer
            end


            Script.Functions.Effect = function(Part, Color)
                local Clone = Script.Locals.HitEffect[HitStyleThing]:Clone()
                Clone.Parent = Part

                for _, Effect in pairs(Clone:GetChildren()) do
                    if Effect:IsA("ParticleEmitter") then
                        Effect.Color = ColorSequence.new({
                            ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
                            ColorSequenceKeypoint.new(0.495, Settings.Visuals.OnHit.Effect.Color),
                            ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0)),
                        })
                        Effect:Emit()
                    end
                end

                task.delay(2, function()
                    Clone:Destroy()
                end)
            end

            Script.Functions.PlaySound = function(SoundId, Volume)
                local Sound = Instance.new("Sound")
                Sound.Parent = Script.AuraIgnoreFolder
                Sound.Volume = Volume
                Sound.SoundId = SoundId

                Sound:Play()

                Script.Functions.Connection(Sound.Ended, function()
                    Sound:Destroy()
                end)
            end

            Script.Functions.Hitcham = function(Player, Color)
      local Character = Player.Character
      local RootPart  = Character and Character:FindFirstChild('HumanoidRootPart')
              Character.Archivable  = true
              local Clone = Character:Clone()
              Clone.Parent = EtherealParts
              Clone.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
              local highlight = Instance.new("Highlight")
              highlight.Parent = Clone
              highlight.FillColor = Color
              highlight.OutlineColor = Color3.fromRGB(255,255,255)
              highlight.OutlineTransparency = 0
              highlight.FillTransparency = 0.5
              highlight.DepthMode = Enum.HighlightDepthMode.Occluded
              highlight.Adornee = Clone
              for _, v in pairs(Clone:GetDescendants()) do
                  if (v:IsA('MeshPart')) then
                      v.Material = Enum.Material.ForceField
                      v.Color = Color
                      v.CanCollide = false
                      v.Anchored = true
                      v.CanQuery = false
                      v.CanTouch = false
                  end
  
                  if (v:IsA('Accessory') or v:IsA('Tool')) then
                      v:Destroy()
                  end
              end
  
              for i,v in pairs(Character:GetDescendants()) do
                  if (v:IsA('MeshPart')) then
                      local ClonePart = Clone:FindFirstChild(v.Name)
  
                      if (ClonePart) then
                          ClonePart.CFrame = v.CFrame
                      end
                  end
              end
  
              Clone:PivotTo(Character.PrimaryPart.CFrame + Vector3.new(LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector.x * 1.5, 0, LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector.z * 1.5))
  
              Character.Archivable = false
              Debris:AddItem(Clone, 2)
            end

            Script.Functions.Rotate = function(Vector, Origin, Angle)
                local CosA = math.cos(Angle)
                local SinA = math.sin(Angle)
                local X = Vector.X - Origin.X
                local Y = Vector.Y - Origin.Y
                local NewX = X * CosA - Y * SinA
                local NewY = X * SinA + Y * CosA
                return Vector2.new(NewX + Origin.x, NewY + Origin.y)
            end
        end
        --// General Functions
        do
            Script.Functions.GetClosestPlayerNumbah = function()
                local Radius = Settings.Combat.AutoSelect.Enabled and Settings.Combat.Fov.Radius or math.huge
                local ClosestPlayer
                local Mouse = UserInputService:GetMouseLocation()

                for _, Player in pairs(Players:GetPlayers()) do
                    if Player ~= LocalPlayer then
                        --// Variables
                        local ScreenPosition = Script.Functions.WorldToScreen(Player.Character.PrimaryPart.Position)
                        local Distance = ((workspace.CurrentCamera.ViewportSize * 0.5) - ScreenPosition.Position).Magnitude

                        --// OnScreen Check
                        if not ScreenPosition.OnScreen then continue end

                        --// Checks
                        if (Settings.Combat.Checks.Enabled and (Settings.Combat.Checks.Vehicle and Player.Character:FindFirstChild("[CarHitBox]")) or (Settings.Combat.Checks.Knocked and Player.Character.BodyEffects["K.O"].Value == true) or (Settings.Combat.Checks.Grabbed and Player.Character:FindFirstChild("GRABBING_CONSTRAINT")) or (Settings.Combat.Checks.Crew and Player.DataFolder.Information.Crew.Value == LocalPlayer.DataFolder.Information.Crew.Value) or (Settings.Combat.Checks.Wall and Script.Functions.WallCheck(Player.Character.PrimaryPart))) then continue end

                        if (Distance <= Radius) then
                            Radius = Distance
                            ClosestPlayer = Player
                        end
                    end
                end

                return ClosestPlayer
            end
            Script.Functions.GetClosestPlayer = function()
                local Radius = Settings.Combat.AutoSelect.Enabled and Settings.Combat.Fov.Radius or math.huge
                local ClosestPlayer
                local Mouse = UserInputService:GetMouseLocation()

                for _, Player in pairs(Players:GetPlayers()) do
                    if Player ~= LocalPlayer and Player.Character and Player.Character.HumanoidRootPart then
                        --// Variables
                        local ScreenPosition = Script.Functions.WorldToScreen(Player.Character.PrimaryPart.Position)
                        local Distance = (Mouse - ScreenPosition.Position).Magnitude

                        --// OnScreen Check
                        if not ScreenPosition.OnScreen then continue end

                        --// Checks
                        if (Settings.Combat.Checks.Enabled and (Settings.Combat.Checks.Vehicle and Player.Character:FindFirstChild("[CarHitBox]")) or (Settings.Combat.Checks.Knocked and Player.Character.BodyEffects["K.O"].Value == true) or (Settings.Combat.Checks.Grabbed and Player.Character:FindFirstChild("GRABBING_CONSTRAINT")) or (Settings.Combat.Checks.Crew and Player.DataFolder.Information.Crew.Value == LocalPlayer.DataFolder.Information.Crew.Value) or (Settings.Combat.Checks.Wall and Script.Functions.WallCheck(Player.Character.PrimaryPart))) then continue end

                        if (Distance < Radius) then
                            Radius = Distance
                            ClosestPlayer = Player
                        end
                    end
                end

                return ClosestPlayer
            end

            Script.Functions.GetTargetPredictedPosition = function()
                local BodyPart = Script.Locals.Target.Character[Settings.Combat.AimPart]
                local Velocity = Settings.Combat.Resolver.Enabled and Script.Locals.Resolver.ResolvedVelocity*Settings.Combat.Prediction.Horizontal or Script.Locals.Target.Character.HumanoidRootPart.AssemblyLinearVelocity*Settings.Combat.Prediction.Horizontal
                local Position = BodyPart.CFrame + Velocity

                if Settings.Combat.Air.Enabled and Settings.Combat.Air.JumpOffset.Enabled then
                    Position = Position + Vector3.new(0, Script.Locals.JumpOffset, 0)
                end
                return Position
            end

            Script.Functions.Resolve = function()
                if Settings.Combat.Enabled and Settings.Combat.Resolver.Enabled and Script.Locals.IsTargetting and Script.Locals.Target then
                    local function lerp(a, b, t)
                        return a + (b - a) * t
                    end

                    Script.Locals.Resolver.OldPos = Script.Locals.Resolver.OldPos
                    Script.Locals.Resolver.OldTick = Script.Locals.Resolver.OldTick or os.clock()

                    local CurrentTime = os.clock()
                    task.wait(0.055)
                    local CurrentPosition = Script.Locals.Target.Character.HumanoidRootPart.Position
                    local NewTime = os.clock()

                    local TimeDifference = NewTime - Script.Locals.Resolver.OldTick
                    if TimeDifference == 0 then return end

                    local RawVelocity = (CurrentPosition - Script.Locals.Resolver.OldPos) / TimeDifference

                    Script.Locals.Resolver.ResolvedVelocity = Script.Locals.Resolver.ResolvedVelocity or RawVelocity
                    Script.Locals.Resolver.ResolvedVelocity = lerp(Script.Locals.Resolver.ResolvedVelocity, RawVelocity, Settings.Combat.Resolver.Smoothness)
                    Script.Locals.Resolver.OldPos = CurrentPosition
                    Script.Locals.Resolver.OldTick = NewTime
                end
            end

            Script.Functions.MouseAim = function()
                if Settings.Combat.Enabled and Settings.Combat.Camera and Script.Locals.IsTargetting and Script.Locals.Target then
                    local LalaPosition = (Script.Functions.GetTargetPredictedPosition().Position)
                    Smoothness = tonumber(Settings.Combat.Smoothing.Horizontal)
                    LookPosition = CFrame.new(CC.CFrame.p, LalaPosition)
                    CC.CFrame = CC.CFrame:Lerp(LookPosition, Smoothness, Enum.EasingStyle[Settings.Combat.EasingStyle], Enum.EasingDirection[Settings.Combat.EasingDirection])
                end
            end

            Script.Functions.UpdateFieldOfView = function()
                Script.Utility.Drawings["FieldOfViewVisualizer"].Visible = Settings.Combat.Enabled and Settings.Combat.AutoSelect.Enabled and Settings.Combat.Fov.Visualize.Enabled
                Script.Utility.Drawings["FieldOfViewVisualizer"].Filled = false
                Script.Utility.Drawings["FieldOfViewVisualizer"].Color = Settings.Combat.Fov.Visualize.Color
                Script.Utility.Drawings["FieldOfViewVisualizer"].Radius = Settings.Combat.Fov.Radius
                Script.Utility.Drawings["FieldOfViewVisualizer"].Position = workspace.CurrentCamera.ViewportSize * 0.5
            end

            Script.Functions.DotThingYes = function()
            if Settings.Combat.Enabled and Settings.Combat.Visuals.Enabled and Script.Locals.IsTargetting and Script.Locals.Target and Settings.Combat.Visuals.Dot.Enabled then
            placemarker.CFrame = CFrame.new((Script.Functions.GetTargetPredictedPosition().Position))
        else
            placemarker.CFrame = CFrame.new(0, 9999, 0)
        end
            end

            Script.Functions.UpdateTargetVisuals = function()
                --// ScreenPosition, Will be changed later
                local Position

                --// Variable to indicate if you"re targetting or not with a check if the target visuals are enabled
                local IsTargetting = Settings.Combat.Enabled and Settings.Combat.Visuals.Enabled and Script.Locals.IsTargetting and Script.Locals.Target or false

                --// Change the position
                if IsTargetting then
                    local PredictedPosition = (Script.Functions.GetTargetPredictedPosition().Position)
                    Position = Script.Functions.WorldToScreen(PredictedPosition)
                end

                --// Variable to indicate if the drawing elements should show
                local TracerShow = IsTargetting and Settings.Combat.Visuals.Tracer.Enabled and Position.OnScreen or false
                local DotShow = IsTargetting and crosshair.sticky or false
                local ChamsShow = IsTargetting and Settings.Combat.Visuals.Chams.Enabled and Script.Locals.Target and Script.Locals.Target.Character or nil


                --// Set the drawing elements visibility
                Script.Utility.Drawings["TargetTracer"].Visible = TracerShow
                Script.Utility.Drawings["TargetDot"].Visible = DotShow
                Script.Utility.Drawings["TargetChams"].Parent = ChamsShow


                --// Update the drawing elements
                if TracerShow then
                    Script.Utility.Drawings["TargetTracer"].From = UserInputService:GetMouseLocation()
                    Script.Utility.Drawings["TargetTracer"].To = Position.Position
                    Script.Utility.Drawings["TargetTracer"].Color = Settings.Combat.Visuals.Tracer.Color
                    Script.Utility.Drawings["TargetTracer"].Thickness = Settings.Combat.Visuals.Tracer.Thickness
                end

                if DotShow then
                    crosshair.mode = 'custom'
                    crosshair.position = Position.Position
                else
                    crosshair.mode = "Middle"
                end

                if ChamsShow then
                    Script.Utility.Drawings["TargetChams"].FillColor = Settings.Combat.Visuals.Chams.Fill.Color
                    Script.Utility.Drawings["TargetChams"].FillTransparency = Settings.Combat.Visuals.Chams.Fill.Transparency
                    Script.Utility.Drawings["TargetChams"].OutlineTransparency = Settings.Combat.Visuals.Chams.Outline.Transparency
                    Script.Utility.Drawings["TargetChams"].OutlineColor = Settings.Combat.Visuals.Chams.Outline.Color
                end
            end

            Script.Functions.AutoSelect = function()
                if (Settings.Combat.Enabled and Settings.Combat.AutoSelect.Enabled) and (tick() - Script.Locals.AutoSelectTick >= Settings.Combat.AutoSelect.Cooldown.Amount and Settings.Combat.AutoSelect.Cooldown.Enabled or true) then
                    local NewTarget = Script.Functions.GetClosestPlayerNumbah()
                    Script.Locals.Target = NewTarget or nil
                    Script.Locals.IsTargetting =  NewTarget and true or false
                    Script.Locals.AutoSelectTick = tick()
                end
            end

            Script.Functions.GunEvents = function()
                local CurrentGun = Script.Functions.GetGun(LocalPlayer)
                if CurrentGun and CurrentGun.IsGunEquipped and CurrentGun.Tool then
                    if CurrentGun.Tool ~= Script.Locals.Gun.PreviousGun then
                        Script.Locals.Gun.PreviousGun = CurrentGun.Tool
                        Script.Locals.Gun.PreviousAmmo = 999
                        --// Connections
                        for _, Connection in pairs(Script.Connections.GunConnections) do
                            Connection:Disconnect()
                        end
                        Script.Connections.GunConnections = {}
                    end

                    if not Script.Connections.GunConnections["GunActivated"] and Settings.Combat.Enabled and Settings.Combat.Silent and Script.Locals.AntiAimViewer.MouseRemoteFound then
                        Script.Connections.GunConnections["GunActivated"] = Script.Functions.Connection(CurrentGun.Tool.Activated, function()
                            if Script.Locals.IsTargetting and Script.Locals.Target then
                                if Settings.Combat.AntiAimViewer then
                                    local Arguments = Script.Locals.AntiAimViewer.MouseRemoteArgs

                                    Arguments[Script.Locals.AntiAimViewer.MouseRemotePositionIndex] = (Script.Functions.GetTargetPredictedPosition().Position)
                                    Script.Locals.AntiAimViewer.MouseRemote:FireServer(unpack(Arguments))
                                end
                            end
                        end)
                    end
                end
            end

            Script.Functions.HitShit = function()
            if WOAHHH and NEINIGGANEINEI then
                local NIGGAAA = WOAHHH
                if Settings.Visuals.OnHit.Enabled then
                    local GRAHGRAHGRAHKEEPITASTACK = Script.Functions.GetClosestPlayerDamage(NIGGAAA[NEINIGGANEINEI], 20)
                    if GRAHGRAHGRAHKEEPITASTACK then
                        if Settings.Visuals.OnHit.Sound.Enabled then
                            local Sound = string.format("hitsounds_stuff/%s", Settings.Visuals.OnHit.Sound.Value)
                            Script.Functions.PlaySound(getcustomasset(Sound), Settings.Visuals.OnHit.Sound.Volume)
                        end
                        
                        if Settings.Visuals.OnHit.Effect.Enabled then
                            Script.Functions.Effect(GRAHGRAHGRAHKEEPITASTACK.Character.HumanoidRootPart)
                        end
                        if Settings.Visuals.OnHit.Chams.Enabled then
                            Script.Functions.Hitcham(GRAHGRAHGRAHKEEPITASTACK, Settings.Visuals.OnHit.Chams.Color)
                        end
                    end
                end
              end
           end

            Script.Functions.Air = function()
                if Settings.Combat.Enabled and Script.Locals.IsTargetting and Script.Locals.Target and Settings.Combat.Air.Enabled then
                    local Humanoid = Script.Locals.Target.Character.Humanoid

                    if Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                        if Settings.Combat.BetaAirshot then
                        ZPred = 0
                    end
                        Script.Locals.JumpOffset = Settings.Combat.Air.JumpOffset.Offset
                    else
                        ZPred = Settings.Combat.Prediction.Horizontal
                        Script.Locals.JumpOffset = 0
                    end
                end
            end

            Script.Functions.VisualizeMovement = function()
                if Settings.Combat.Skibidi then
                  local Character = LocalPlayer and (LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait())
                  local RootPart = Character and Character.HumanoidRootPart
                  local Ball = Instance.new('Part') do
                      Ball.Anchored = true
                      Ball.Size = Vector3.new(0.5, 0.5, 0.5)
                      Ball.Transparency = -0.5
                      Ball.Shape = Enum.PartType.Ball
                      Ball.Color = Color3.fromRGB(255,255,255)
                      Ball.Material = Enum.Material.ForceField
                      Ball.Parent = Workspace
                      Ball.CFrame = RootPart.CFrame
                      Ball.CanCollide = false
                      local highlight = Instance.new("Highlight")
                      highlight.Adornee = Ball
                      highlight.FillColor = Color3.fromRGB(255,255,255)
                      highlight.OutlineColor = Color3.fromRGB(255,255,255)
                      highlight.Parent = Ball
                  end;
                  Debris:AddItem(Ball, 2)
                end
            end

            Script.Functions.UpdateHealth = function()
                if Settings.Visuals.OnHit.Enabled then
                    for _, Player in pairs(Players:GetPlayers()) do
                        if Player.Character and Player.Character.Humanoid then
                            Script.Locals.PlayerHealth[Player.Name] = Player.Character.Humanoid.Health
                        end
                    end
                end
            end

            Script.Functions.UpdateAtmosphere = function()
                Lighting.FogColor = Settings.Visuals.World.Enabled and Settings.Visuals.World.Fog.Enabled and Settings.Visuals.World.Fog.Color or Script.Locals.World.FogColor
                Lighting.FogStart = Settings.Visuals.World.Enabled and Settings.Visuals.World.Fog.Enabled and Settings.Visuals.World.Fog.Start or Script.Locals.World.FogStart
                Lighting.FogEnd = Settings.Visuals.World.Enabled and Settings.Visuals.World.Fog.Enabled and Settings.Visuals.World.Fog.End or Script.Locals.World.FogEnd
                Lighting.Ambient = Settings.Visuals.World.Enabled and Settings.Visuals.World.Ambient.Enabled and Settings.Visuals.World.Ambient.Color or Script.Locals.World.Ambient
                Lighting.Brightness = Settings.Visuals.World.Enabled and Settings.Visuals.World.Brightness.Enabled and Settings.Visuals.World.Brightness.Value or Script.Locals.World.Brightness
                Lighting.ClockTime = Settings.Visuals.World.Enabled and Settings.Visuals.World.ClockTime.Enabled and Settings.Visuals.World.ClockTime.Value or Script.Locals.World.ClockTime
                Lighting.ExposureCompensation = Settings.Visuals.World.Enabled and Settings.Visuals.World.WorldExposure.Enabled and Settings.Visuals.World.WorldExposure.Value or Script.Locals.World.ExposureCompensation
            end

            Script.Functions.VelocitySpoof = function()
                local ShowVisualizerDot = Settings.AntiAim.VelocitySpoofer.Enabled and Settings.AntiAim.VelocitySpoofer.Visualize.Enabled

                Script.Utility.Drawings["VelocityDot"].Visible = ShowVisualizerDot


                if Settings.AntiAim.VelocitySpoofer.Enabled then
                    --// Variables
                    local Type = Settings.AntiAim.VelocitySpoofer.Type
                    local HumanoidRootPart = LocalPlayer.Character.HumanoidRootPart
                    local Velocity = HumanoidRootPart.Velocity

                    --// Main
                    if Type == "Underground" then
                        HumanoidRootPart.Velocity = HumanoidRootPart.Velocity + Vector3.new(0, -Settings.AntiAim.VelocitySpoofer.Yaw, 0)
                    elseif Type == "Sky" then
                        HumanoidRootPart.Velocity = HumanoidRootPart.Velocity + Vector3.new(0, Settings.AntiAim.VelocitySpoofer.Yaw, 0)
                    elseif Type == "Multiplier" then
                        HumanoidRootPart.Velocity = HumanoidRootPart.Velocity + Vector3.new(Settings.AntiAim.VelocitySpoofer.Yaw, Settings.AntiAim.VelocitySpoofer.Pitch, Settings.AntiAim.VelocitySpoofer.Roll)
                    elseif Type == "Custom" then
                        HumanoidRootPart.Velocity = Vector3.new(Settings.AntiAim.VelocitySpoofer.Yaw, Settings.AntiAim.VelocitySpoofer.Pitch, Settings.AntiAim.VelocitySpoofer.Roll)
                    elseif Type == "Prediction Breaker" then
                        HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
                    end

                    if ShowVisualizerDot then
                        local ScreenPosition = Script.Functions.WorldToScreen(LocalPlayer.Character.HumanoidRootPart.Position + LocalPlayer.Character.HumanoidRootPart.Velocity * Settings.AntiAim.VelocitySpoofer.Visualize.Prediction)

                        Script.Utility.Drawings["VelocityDot"].Position = ScreenPosition.Position
                        Script.Utility.Drawings["VelocityDot"].Color = Settings.AntiAim.VelocitySpoofer.Visualize.Color
                    end

                    RunService.PreSimulation:Wait()
                    HumanoidRootPart.Velocity = Velocity
                end
            end

            Script.Functions.CSync = function()
                Script.Utility.Drawings["CFrameVisualize"].Parent = Settings.AntiAim.CSync.Visualize.Enabled and Settings.AntiAim.CSync.Enabled and Script.AuraIgnoreFolder or nil

                if Settings.AntiAim.CSync.Enabled then
                    local Type = Settings.AntiAim.CSync.Type
                    local FakeCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
                    Script.Locals.SavedCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
                    if Type == "Target Strafe" and Script.Locals.IsTargetting and Script.Locals.Target and Settings.Combat.Enabled then
                        local CurrentTime = tick()
                        FakeCFrame = CFrame.new(Script.Locals.Target.Character.HumanoidRootPart.Position) * CFrame.Angles(0, 2 * math.pi * CurrentTime * Settings.AntiAim.CSync.TargetStrafe.Speed % (2 * math.pi), 0) * CFrame.new(0, Settings.AntiAim.CSync.TargetStrafe.Height, Settings.AntiAim.CSync.TargetStrafe.Distance)
                    elseif Type == "Random Target" and Script.Locals.IsTargetting and Script.Locals.Target and Settings.Combat.Enabled then
                        FakeCFrame = CFrame.new(Script.Locals.Target.Character.HumanoidRootPart.Position + Vector3.new(math.random(-Settings.AntiAim.CSync.RandomDistance, Settings.AntiAim.CSync.RandomDistance), math.random(-0, Settings.AntiAim.CSync.RandomDistance), math.random(-Settings.AntiAim.CSync.RandomDistance, Settings.AntiAim.CSync.RandomDistance))) * CFrame.Angles(math.rad(math.random(0, 360)), math.rad(math.random(0, 360)), math.rad(math.random(0, 360)))
                    end

                    Script.Utility.Drawings["CFrameVisualize"]:SetPrimaryPartCFrame(FakeCFrame)

                    for _, Part in pairs(Script.Utility.Drawings["CFrameVisualize"]:GetChildren()) do
                        Part.Color = Settings.AntiAim.CSync.Visualize.Color
                    end
                    LocalPlayer.Character.HumanoidRootPart.CFrame = FakeCFrame
                    RunService.PreSimulation:Wait()
                    if Settings.AntiAim.CSync.Spoof  then
                    LocalPlayer.Character.HumanoidRootPart.CFrame = Script.Locals.SavedCFrame
                    end
                end
            end

            Script.Functions.Network = function()
                if Settings.AntiAim.Network.Enabled then
                    if (tick() - Script.Locals.NetworkPreviousTick) >= ((Settings.AntiAim.Network.Amount / math.pi) / 10000) or (Settings.AntiAim.Network.WalkingCheck and LocalPlayer.Character.Humanoid.MoveDirection.Magnitude > 0) then
                        Script.Locals.NetworkShouldSleep = not Script.Locals.NetworkShouldSleep
                        Script.Locals.NetworkPreviousTick = tick()
                        sethiddenproperty(LocalPlayer.Character.HumanoidRootPart, "NetworkIsSleeping", Script.Locals.NetworkShouldSleep)
                    end
                end
            end

            Script.Functions.Speed = function()
                if Settings.Misc.Movement.Speed.Enabled then
                    LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame + LocalPlayer.Character.Humanoid.MoveDirection * Settings.Misc.Movement.Speed.Amount
                end
            end

            Script.Functions.VelocityDesync = function()
                if Settings.AntiAim.VelocityDesync.Enabled then
                    local HumanoidRootPart = LocalPlayer.Character.HumanoidRootPart
                    local Velocity = HumanoidRootPart.Velocity
                    local Amount = Settings.AntiAim.VelocityDesync.Range * 1000
                    HumanoidRootPart.Velocity = Vector3.new(math.random(-Amount, Amount), math.random(-Amount, Amount), math.random(-Amount, Amount))
                    RunService.PreSimulation:Wait()
                    HumanoidRootPart.Velocity = Velocity
                end
            end

            Script.Functions.DaCoolBoyDesync = function()
                if Settings.AntiAim.DaCoolBoyDesync then
                    setfflag("S2PhysicsSenderRate", 1)
                    setfflag("VisualizationImprovements", 1)
                    setfflag("VisualizeAllPropertyChanges", 1)
                    setfflag("VisualizerTrackRotationPredictions", 1)
                    setfflag("EnableInterpolationVisualizer", 1)
                    RunService.PreSimulation:Wait()
                end
            end
            
            
            Script.Functions.FFlagDesync = function()
                if Settings.AntiAim.FFlagDesync.Enabled then
                    for FFlag, _ in pairs(Settings.AntiAim.FFlagDesync.FFlags) do
                        local Value = Settings.AntiAim.FFlagDesync.Amount
                        setfflag(FFlag, tostring(Value))

                        RunService.PreSimulation:Wait()
                        if Settings.AntiAim.FFlagDesync.SetNew then
                            setfflag(FFlag, Settings.AntiAim.FFlagDesync.SetNewAmount)
                        end
                    end
                end
            end

            Script.Functions.NoSlowdown = function()
                if Settings.Misc.Exploits.NoSlowDown then
                    for _, Slowdown in pairs(LocalPlayer.Character.BodyEffects.Movement:GetChildren()) do
                        Slowdown:Destroy()
                    end
                end
            end

            Script.Functions.UpdateLookAt = function()
                if Settings.Combat.Enabled and Settings.Combat.Silent and Settings.Combat.LookAt and Script.Locals.IsTargetting and Script.Locals.Target and LocalPlayer and LocalPlayer.Character and LocalPlayer.Character.Humanoid then
                    LocalPlayer.Character.Humanoid.AutoRotate = false
                    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.CFrame.Position, Vector3.new(Script.Locals.Target.Character.HumanoidRootPart.CFrame.X, LocalPlayer.Character.HumanoidRootPart.CFrame.Position.Y, Script.Locals.Target.Character.HumanoidRootPart.CFrame.Z))
                else
                    LocalPlayer.Character.Humanoid.AutoRotate = true
                end
            end

            Script.Functions.UpdateSpectate = function()
                if Settings.Combat.Enabled and Settings.Combat.Silent and Settings.Combat.Spectate and Script.Locals.IsTargetting and Script.Locals.Target and LocalPlayer and LocalPlayer.Character and LocalPlayer.Character.Humanoid then
                    Camera.CameraSubject = Script.Locals.Target.Character.Humanoid
                else
                    Camera.CameraSubject = LocalPlayer.Character.Humanoid
                end
            end
        end

        --// Esp Function
        do

        end
    end

    --// Drawing objects
    do
        Script.Utility.Drawings["FieldOfViewVisualizer"] = Script.Functions.CreateDrawing("Circle", {
            Visible = Settings.Combat.Fov.Visualize.Enabled,
            Color = Settings.Combat.Fov.Visualize.Color,
            Radius = Settings.Combat.Fov.Radius
        })

        Script.Utility.Drawings["TargetTracer"] = Script.Functions.CreateDrawing("Line",{
            Visible = false,
            Color = Settings.Combat.Visuals.Tracer.Color,
            Thickness = Settings.Combat.Visuals.Tracer.Thickness
        })

        Script.Utility.Drawings["TargetDot"] = Script.Functions.CreateDrawing("Circle", {
            Visible = false,
            Color = Settings.Combat.Visuals.Dot.Color,
            Radius = Settings.Combat.Visuals.Dot.Size
        })

        Script.Utility.Drawings["VelocityDot"] = Script.Functions.CreateDrawing("Circle", {
            Visible = false,
            Color = Settings.AntiAim.VelocitySpoofer.Visualize.Color,
            Radius = 6,
            Filled = true
        })

        Script.Utility.Drawings["TargetChams"] = Script.Functions.Create("Highlight", {
            Parent = nil,
            FillColor = Settings.Combat.Visuals.Chams.Fill.Color,
            FillTransparency = Settings.Combat.Visuals.Chams.Fill.Transparency,
            OutlineColor = Settings.Combat.Visuals.Chams.Fill.Color,
            OutlineTransparency = Settings.Combat.Visuals.Chams.Outline.Transparency
        })

        Script.Utility.Drawings["CrosshairTop"] = Script.Functions.CreateDrawing("Line", {
            Color = Color3.fromRGB(255, 255, 255),
            Thickness = 1,
            Visible = false,
            ZIndex = 10000
        })

        Script.Utility.Drawings["CrosshairBottom"] = Script.Functions.CreateDrawing("Line", {
            Color = Color3.fromRGB(255, 255, 255),
            Thickness = 1,
            Visible = false,
            ZIndex = 10000
        })

        Script.Utility.Drawings["CrosshairLeft"] = Script.Functions.CreateDrawing("Line", {
            Color = Color3.fromRGB(255, 255, 255),
            Thickness = 1,
            Visible = false,
            ZIndex = 10000
        })

        Script.Utility.Drawings["CrosshairRight"] = Script.Functions.CreateDrawing("Line", {
            Color = Color3.fromRGB(255, 255, 255),
            Thickness = 1,
            Visible = false,
            ZIndex = 10000
        })


        Script.Utility.Drawings["CFrameVisualize"] = game:GetObjects("rbxassetid://9474737816")[1]; Script.Utility.Drawings["CFrameVisualize"].Head.Face:Destroy(); for _, v in pairs(Script.Utility.Drawings["CFrameVisualize"]:GetChildren()) do v.Transparency = v.Name == "HumanoidRootPart" and 1 or 0.70; v.Material = "Neon"; v.Color = Settings.AntiAim.CSync.Visualize.Color; v.CanCollide = false; v.Anchored = false end
    end

    --// Hitsounds
    do
        --// Hitsounds
        Hitsounds = {
            ["hentai.wav"] = "https://github.com/LionTheGreatRealFrFr/hitsounds1/raw/refs/heads/master/hentai2.mp3",
            ["hentai2.wav"] = "https://github.com/LionTheGreatRealFrFr/hitsounds1/raw/refs/heads/master/hentai1.wav",
            ["hentai3.wav"] = "https://github.com/LionTheGreatRealFrFr/hitsounds1/raw/refs/heads/master/hentai3.mp3",
            ["hentai4.wav"] = "https://github.com/LionTheGreatRealFrFr/hitsounds1/raw/refs/heads/master/hentai4.wav",
            ["combobreak.wav"] = "https://github.com/LionTheGreatRealFrFr/hitsounds1/raw/refs/heads/master/combobreak.wav",
            ["applepay.wav"] = "https://github.com/LionTheGreatRealFrFr/hitsounds1/raw/refs/heads/master/applepay.wav",
            ["stony.wav"] = "https://github.com/LionTheGreatRealFrFr/hitsounds1/raw/refs/heads/master/stony.wav",
            ["amongus.wav"] = "https://github.com/LionTheGreatRealFrFr/hitsounds1/raw/refs/heads/master/amongus_kill.wav",
            ["bell.wav"] = "https://github.com/nyulachan/nyula/blob/main/Sounds/bell.wav?raw=true",
            ["bepis.wav"] = "https://github.com/nyulachan/nyula/blob/main/Sounds/bepis.wav?raw=true",
            ["bubble.wav"] = "https://github.com/nyulachan/nyula/blob/main/Sounds/bubble.wav?raw=true",
            ["cock.wav"] = "https://github.com/nyulachan/nyula/blob/main/Sounds/cock.wav?raw=true",
            ["cod.wav"] = "https://github.com/nyulachan/nyula/blob/main/Sounds/cod.wav?raw=true",
            ["fatality.wav"] = "https://github.com/nyulachan/nyula/blob/main/Sounds/fatality.wav?raw=true",
            ["phonk.wav"] = "https://github.com/nyulachan/nyula/blob/main/Sounds/phonk.wav?raw=true",
            ["sparkle.wav"] = "https://github.com/nyulachan/nyula/blob/main/Sounds/sparkle.wav?raw=true",
        }

        if not isfolder("hitsounds_stuff") then
            makefolder("hitsounds_stuff")
        end

        for Name, Url in pairs(Hitsounds) do
            local Path = "hitsounds_stuff" .. "/" .. Name
            if not isfile(Path) then
                writefile(Path, game:HttpGet(Url))
            end
        end
    end

    --// Hit Effects
    do
        
--// Crescent Slash

do
local Insane = Instance.new("Part")
Insane.Parent = ReplicatedStorage

local Attachment = Instance.new("Attachment")
Attachment.Name = "Attachment"
Attachment.Parent = Insane

Script.Locals.HitEffect["Crescent Slash"] = Attachment

local Glow = Instance.new("ParticleEmitter")
Glow.Name = "Glow"
Glow.Lifetime = NumberRange.new(0.16, 0.16)
Glow.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1421725, 0.6182796), NumberSequenceKeypoint.new(1, 1)})
Glow.Color = ColorSequence.new(Color3.fromRGB(91, 177, 252))
Glow.Speed = NumberRange.new(0, 0)
Glow.Brightness = 5
Glow.Size = NumberSequence.new(9.1873131, 16.5032349)
Glow.Enabled = false
Glow.ZOffset = -0.0565939
Glow.Rate = 50
Glow.Texture = "rbxassetid://8708637750"

local Gradient1 = Instance.new("ParticleEmitter")
Gradient1.Name = "Gradient1"
Gradient1.Lifetime = NumberRange.new(0.3, 0.3)
Gradient1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.15, 0.3), NumberSequenceKeypoint.new(1, 1)})
Gradient1.Color = ColorSequence.new(Color3.fromRGB(115, 201, 255))
Gradient1.Speed = NumberRange.new(0, 0)
Gradient1.Brightness = 6
Gradient1.Size = NumberSequence.new(0, 11.6261358)
Gradient1.Enabled = false
Gradient1.ZOffset = 0.9187313
Gradient1.Rate = 50
Gradient1.Texture = "rbxassetid://8196169974"
Gradient1.Parent = Attachment

local Shards = Instance.new("ParticleEmitter")
Shards.Name = "Shards"
Shards.Lifetime = NumberRange.new(0.19, 0.7)
Shards.SpreadAngle = Vector2.new(-90, 90)
Shards.Color = ColorSequence.new(Color3.fromRGB(108, 184, 255))
Shards.Drag = 10
Shards.VelocitySpread = -90
Shards.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.5705521, 0.4125001), NumberSequenceKeypoint.new(1, -0.9375)})
Shards.Speed = NumberRange.new(97.7530136, 146.9970093)
Shards.Brightness = 4
Shards.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.284774, 1.2389833, 0.1534118), NumberSequenceKeypoint.new(1, 0)})
Shards.Enabled = false
Shards.Acceleration = Vector3.new(0, -56.961341857910156, 0)
Shards.ZOffset = 0.5705321
Shards.Rate = 50
Shards.Texture = "rbxassetid://8030734851"
Shards.Rotation = NumberRange.new(90, 90)
Shards.Orientation = Enum.ParticleOrientation.VelocityParallel
Shards.Parent = Attachment

local ShardsDark = Instance.new("ParticleEmitter")
ShardsDark.Name = "ShardsDark"
ShardsDark.Lifetime = NumberRange.new(0.19, 0.35)
ShardsDark.SpreadAngle = Vector2.new(-90, 90)
ShardsDark.Color = ColorSequence.new(Color3.fromRGB(108, 184, 255))
ShardsDark.Drag = 10
ShardsDark.VelocitySpread = -90
ShardsDark.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.5705521, 0.4125001), NumberSequenceKeypoint.new(1, -0.9375)})
ShardsDark.Speed = NumberRange.new(97.7530136, 146.9970093)
ShardsDark.Brightness = 4
ShardsDark.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.290774, 0.6734411, 0.1534118), NumberSequenceKeypoint.new(1, 0)})
ShardsDark.Enabled = false
ShardsDark.ZOffset = 0.5705321
ShardsDark.Rate = 50
ShardsDark.Texture = "rbxassetid://8030734851"
ShardsDark.Rotation = NumberRange.new(90, 90)
ShardsDark.Orientation = Enum.ParticleOrientation.VelocityParallel
ShardsDark.Parent = Attachment

local Specs = Instance.new("ParticleEmitter")
Specs.Name = "Specs"
Specs.Lifetime = NumberRange.new(0.33, 1.4)
Specs.SpreadAngle = Vector2.new(360, -1000)
Specs.Color = ColorSequence.new(Color3.fromRGB(98, 174, 255))
Specs.Drag = 10
Specs.VelocitySpread = 360
Specs.Speed = NumberRange.new(36.7492523, 146.9970093)
Specs.Brightness = 7
Specs.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.200774, 2.0311937, 0.4363973), NumberSequenceKeypoint.new(1, 0)})
Specs.Enabled = false
Specs.Acceleration = Vector3.new(0, 36.74925231933594, 0)
Specs.Rate = 50
Specs.Texture = "rbxassetid://8030760338"
Specs.EmissionDirection = Enum.NormalId.Right
Specs.Parent = Attachment

local Specs1 = Instance.new("ParticleEmitter")
Specs1.Name = "Specs"
Specs1.Lifetime = NumberRange.new(0.33, 1.75)
Specs1.SpreadAngle = Vector2.new(90, -90)
Specs1.Color = ColorSequence.new(Color3.fromRGB(106, 171, 255))
Specs1.Drag = 9
Specs1.VelocitySpread = 90
Specs1.Speed = NumberRange.new(42.2616425, 73.4985046)
Specs1.Brightness = 6
Specs1.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.210774, 0.3978962, 0.1855686), NumberSequenceKeypoint.new(1, 0)})
Specs1.Enabled = false
Specs1.Acceleration = Vector3.new(0, -20.21208953857422, 0)
Specs1.ZOffset = 0.5144895
Specs1.Rate = 50
Specs1.Texture = "rbxassetid://8030760338"
Specs1.Parent = Attachment

local Specs2 = Instance.new("ParticleEmitter")
Specs2.Name = "Specs"
Specs2.Lifetime = NumberRange.new(0.19, 1.2)
Specs2.SpreadAngle = Vector2.new(360, -1000)
Specs2.Color = ColorSequence.new(Color3.fromRGB(98, 174, 255))
Specs2.Drag = 10
Specs2.VelocitySpread = 360
Specs2.Speed = NumberRange.new(36.7492523, 146.9970093)
Specs2.Brightness = 7
Specs2.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.200774, 2.0311937, 0.4363973), NumberSequenceKeypoint.new(1, 0)})
Specs2.Enabled = false
Specs2.Acceleration = Vector3.new(0, 36.74925231933594, 0)
Specs2.Rate = 50
Specs2.Texture = "rbxassetid://8030760338"
Specs2.EmissionDirection = Enum.NormalId.Right
Specs2.Parent = Attachment

local Specs21 = Instance.new("ParticleEmitter")
Specs21.Name = "Specs2"
Specs21.Lifetime = NumberRange.new(0.19, 1.35)
Specs21.SpreadAngle = Vector2.new(90, -90)
Specs21.Color = ColorSequence.new(Color3.fromRGB(106, 171, 255))
Specs21.Drag = 12
Specs21.VelocitySpread = 90
Specs21.Speed = NumberRange.new(42.2616425, 73.4985046)
Specs21.Brightness = 6
Specs21.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.216774, 0.5721694, 0.1855686), NumberSequenceKeypoint.new(1, 0)})
Specs21.Enabled = false
Specs21.Acceleration = Vector3.new(0, -20.21208953857422, 0)
Specs21.ZOffset = 0.5144895
Specs21.Rate = 50
Specs21.Texture = "rbxassetid://8030760338"
Specs21.Parent = Attachment

local ddddddddddddddddddd = Instance.new("ParticleEmitter")
ddddddddddddddddddd.Name = "ddddddddddddddddddd"
ddddddddddddddddddd.Lifetime = NumberRange.new(0.19, 0.37)
ddddddddddddddddddd.SpreadAngle = Vector2.new(90, -90)
ddddddddddddddddddd.LockedToPart = true
ddddddddddddddddddd.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.6429392, 0), NumberSequenceKeypoint.new(1, 0)})
ddddddddddddddddddd.LightEmission = 1
ddddddddddddddddddd.Color = ColorSequence.new(Color3.fromRGB(90, 184, 255), Color3.fromRGB(165, 251, 255))
ddddddddddddddddddd.Drag = 6
ddddddddddddddddddd.TimeScale = 0.7
ddddddddddddddddddd.VelocitySpread = 90
ddddddddddddddddddd.Speed = NumberRange.new(81.5833435, 110.2477646)
ddddddddddddddddddd.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.410774, 0.6711507, 0.3356177), NumberSequenceKeypoint.new(1, 0)})
ddddddddddddddddddd.Enabled = false
ddddddddddddddddddd.Acceleration = Vector3.new(0, -81.58334350585938, 0)
ddddddddddddddddddd.ZOffset = 0.8345273
ddddddddddddddddddd.Rate = 50
ddddddddddddddddddd.Texture = "rbxassetid://1053546634"
ddddddddddddddddddd.RotSpeed = NumberRange.new(-444, 166)
ddddddddddddddddddd.Rotation = NumberRange.new(-360, 360)
ddddddddddddddddddd.Parent = Attachment

local large_shard = Instance.new("ParticleEmitter")
large_shard.Name = "large_shard"
large_shard.Lifetime = NumberRange.new(0.19, 0.28)
large_shard.SpreadAngle = Vector2.new(-90, 90)
large_shard.Color = ColorSequence.new(Color3.fromRGB(108, 184, 255))
large_shard.Drag = 10
large_shard.VelocitySpread = -90
large_shard.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.5705521, 0.4125001), NumberSequenceKeypoint.new(1, -0.9375)})
large_shard.Speed = NumberRange.new(97.7530136, 146.9970093)
large_shard.Brightness = 4
large_shard.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.260774, 3.515605, 0.1534118), NumberSequenceKeypoint.new(1, 0)})
large_shard.Enabled = false
large_shard.ZOffset = 0.5705321
large_shard.Rate = 50
large_shard.Texture = "rbxassetid://8030734851"
large_shard.Rotation = NumberRange.new(90, 90)
large_shard.Orientation = Enum.ParticleOrientation.VelocityParallel
large_shard.Parent = Attachment

local out_Specs = Instance.new("ParticleEmitter")
out_Specs.Name = "out_Specs"
out_Specs.Lifetime = NumberRange.new(0.19, 1)
out_Specs.SpreadAngle = Vector2.new(44, -1000)
out_Specs.Color = ColorSequence.new(Color3.fromRGB(98, 174, 255))
out_Specs.Drag = 10
out_Specs.VelocitySpread = 44
out_Specs.Speed = NumberRange.new(36.7492523, 146.9970093)
out_Specs.Brightness = 7
out_Specs.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.244774, 0.5469525, 0.1433053), NumberSequenceKeypoint.new(1, 0)})
out_Specs.Enabled = false
out_Specs.Acceleration = Vector3.new(0, -3.215559720993042, 0)
out_Specs.Rate = 50
out_Specs.Texture = "rbxassetid://8030760338"
out_Specs.EmissionDirection = Enum.NormalId.Right
out_Specs.Parent = Attachment

local Effect = Instance.new("ParticleEmitter")
Effect.Name = "Effect"
Effect.Lifetime = NumberRange.new(0.4, 0.7)
Effect.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid4x4
Effect.SpreadAngle = Vector2.new(360, -360)
Effect.LockedToPart = true
Effect.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1070999, 0.19375), NumberSequenceKeypoint.new(0.7761194, 0.88125), NumberSequenceKeypoint.new(1, 1)})
Effect.LightEmission = 1
Effect.Color = ColorSequence.new(Color3.fromRGB(92, 161, 252))
Effect.Drag = 1
Effect.VelocitySpread = 360
Effect.Speed = NumberRange.new(0.0036749, 0.0036749)
Effect.Brightness = 2.0999999
Effect.Size = NumberSequence.new(6.9680691, 9.9213123)
Effect.Enabled = false
Effect.ZOffset = 0.4777403
Effect.Rate = 50
Effect.Texture = "rbxassetid://9484012464"
Effect.RotSpeed = NumberRange.new(-150, -150)
Effect.FlipbookMode = Enum.ParticleFlipbookMode.OneShot
Effect.Rotation = NumberRange.new(50, 50)
Effect.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Effect.Parent = Attachment

local Crescents = Instance.new("ParticleEmitter")
Crescents.Name = "Crescents"
Crescents.Lifetime = NumberRange.new(0.19, 0.38)
Crescents.SpreadAngle = Vector2.new(-360, 360)
Crescents.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1932907, 0), NumberSequenceKeypoint.new(0.778754, 0), NumberSequenceKeypoint.new(1, 1)})
Crescents.LightEmission = 1
Crescents.Color = ColorSequence.new(Color3.fromRGB(92, 161, 252))
Crescents.VelocitySpread = -360
Crescents.Speed = NumberRange.new(0.0826858, 0.0826858)
Crescents.Brightness = 20
Crescents.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.398774, 8.8026266, 2.2834616), NumberSequenceKeypoint.new(1, 11.477972, 1.860431)})
Crescents.Enabled = false
Crescents.ZOffset = 0.4542207
Crescents.Rate = 50
Crescents.Texture = "rbxassetid://12509373457"
Crescents.RotSpeed = NumberRange.new(800, 1000)
Crescents.Rotation = NumberRange.new(-360, 360)
Crescents.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Crescents.Parent = Attachment

Insane.Parent = workspace
end

do --// Cosmic Explosion

local Part = Instance.new("Part")

Part.Parent = ReplicatedStorage

local Attachment = Instance.new("Attachment")
Attachment.Name = "Attachment"
Attachment.Parent = Part

Script.Locals.HitEffect["Cosmic Explosion"] = Attachment

local Glow = Instance.new("ParticleEmitter")
Glow.Name = "Glow"
Glow.Lifetime = NumberRange.new(0.16, 0.16)
Glow.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1421725, 0.6182796), NumberSequenceKeypoint.new(1, 1)})
Glow.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Glow.Speed = NumberRange.new(0, 0)
Glow.Brightness = 5
Glow.Size = NumberSequence.new(9.1873131, 16.5032349)
Glow.Enabled = false
Glow.ZOffset = -0.0565939
Glow.Rate = 50
Glow.Texture = "rbxassetid://8708637750"
Glow.Parent = Attachment

local Effect = Instance.new("ParticleEmitter")
Effect.Name = "Effect"
Effect.Lifetime = NumberRange.new(0.4, 0.7)
Effect.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid4x4
Effect.SpreadAngle = Vector2.new(360, -360)
Effect.LockedToPart = true
Effect.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1070999, 0.19375), NumberSequenceKeypoint.new(0.7761194, 0.88125), NumberSequenceKeypoint.new(1, 1)})
Effect.LightEmission = 1
Effect.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Effect.Drag = 1
Effect.VelocitySpread = 360
Effect.Speed = NumberRange.new(0.0036749, 0.0036749)
Effect.Brightness = 2.0999999
Effect.Size = NumberSequence.new(6.9680691, 9.9213123)
Effect.Enabled = false
Effect.ZOffset = 0.4777403
Effect.Rate = 50
Effect.Texture = "rbxassetid://9484012464"
Effect.RotSpeed = NumberRange.new(-150, -150)
Effect.FlipbookMode = Enum.ParticleFlipbookMode.OneShot
Effect.Rotation = NumberRange.new(50, 50)
Effect.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Effect.Parent = Attachment

local Gradient1 = Instance.new("ParticleEmitter")
Gradient1.Name = "Gradient1"
Gradient1.Lifetime = NumberRange.new(0.3, 0.3)
Gradient1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.15, 0.3), NumberSequenceKeypoint.new(1, 1)})
Gradient1.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Gradient1.Speed = NumberRange.new(0, 0)
Gradient1.Brightness = 6
Gradient1.Size = NumberSequence.new(0, 11.6261358)
Gradient1.Enabled = false
Gradient1.ZOffset = 0.9187313
Gradient1.Rate = 50
Gradient1.Texture = "rbxassetid://8196169974"
Gradient1.Parent = Attachment

local Shards = Instance.new("ParticleEmitter")
Shards.Name = "Shards"
Shards.Lifetime = NumberRange.new(0.19, 0.7)
Shards.SpreadAngle = Vector2.new(-90, 90)
Shards.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Shards.Drag = 10
Shards.VelocitySpread = -90
Shards.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.5705521, 0.4125001), NumberSequenceKeypoint.new(1, -0.9375)})
Shards.Speed = NumberRange.new(97.7530136, 146.9970093)
Shards.Brightness = 4
Shards.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.284774, 1.2389833, 0.1534118), NumberSequenceKeypoint.new(1, 0)})
Shards.Enabled = false
Shards.Acceleration = Vector3.new(0, -56.961341857910156, 0)
Shards.ZOffset = 0.5705321
Shards.Rate = 50
Shards.Texture = "rbxassetid://8030734851"
Shards.Rotation = NumberRange.new(90, 90)
Shards.Orientation = Enum.ParticleOrientation.VelocityParallel
Shards.Parent = Attachment

local Crescents = Instance.new("ParticleEmitter")
Crescents.Name = "Crescents"
Crescents.Lifetime = NumberRange.new(0.19, 0.38)
Crescents.SpreadAngle = Vector2.new(-360, 360)
Crescents.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1932907, 0), NumberSequenceKeypoint.new(0.778754, 0), NumberSequenceKeypoint.new(1, 1)})
Crescents.LightEmission = 10
Crescents.Color = ColorSequence.new(Color3.fromRGB(160, 96, 255))
Crescents.VelocitySpread = -360
Crescents.Speed = NumberRange.new(0.0826858, 0.0826858)
Crescents.Brightness = 4
Crescents.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.398774, 8.8026266, 2.2834616), NumberSequenceKeypoint.new(1, 11.477972, 1.860431)})
Crescents.Enabled = false
Crescents.ZOffset = 0.4542207
Crescents.Rate = 50
Crescents.Texture = "rbxassetid://12509373457"
Crescents.RotSpeed = NumberRange.new(800, 1000)
Crescents.Rotation = NumberRange.new(-360, 360)
Crescents.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Crescents.Parent = Attachment

local ParticleEmitter2 = Instance.new("ParticleEmitter")
ParticleEmitter2.Name = "ParticleEmitter2"
ParticleEmitter2.FlipbookFramerate = NumberRange.new(20, 20)
ParticleEmitter2.Lifetime = NumberRange.new(0.19, 0.38)
ParticleEmitter2.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid4x4
ParticleEmitter2.SpreadAngle = Vector2.new(360, 360)
ParticleEmitter2.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.209842, 0.5), NumberSequenceKeypoint.new(0.503842, 0.263333), NumberSequenceKeypoint.new(0.799842, 0.5), NumberSequenceKeypoint.new(1, 1)})
ParticleEmitter2.LightEmission = 1
ParticleEmitter2.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
ParticleEmitter2.VelocitySpread = 360
ParticleEmitter2.Speed = NumberRange.new(0.0161231, 0.0161231)
ParticleEmitter2.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 4.3125), NumberSequenceKeypoint.new(0.3985056, 7.9375), NumberSequenceKeypoint.new(1, 10)})
ParticleEmitter2.Enabled = false
ParticleEmitter2.ZOffset = 0.15
ParticleEmitter2.Rate = 100
ParticleEmitter2.Texture = "http://www.roblox.com/asset/?id=12394566430"
ParticleEmitter2.FlipbookMode = Enum.ParticleFlipbookMode.OneShot
ParticleEmitter2.Rotation = NumberRange.new(39, 999)
ParticleEmitter2.Orientation = Enum.ParticleOrientation.VelocityParallel
ParticleEmitter2.Parent = Attachment

Part.Parent = workspace
end

do --// Coom

local Part = Instance.new("Part")

Part.Parent = ReplicatedStorage

local Attachment = Instance.new("Attachment")
Attachment.Parent = Part

Script.Locals.HitEffect["Coom"] = Attachment

local Foam = Instance.new("ParticleEmitter")
Foam.Name = "Foam"
Foam.LightInfluence = 0.5
Foam.Lifetime = NumberRange.new(1, 1)
Foam.SpreadAngle = Vector2.new(360, -360)
Foam.VelocitySpread = 360
Foam.Squash = NumberSequence.new(1)
Foam.Speed = NumberRange.new(20, 20)
Foam.Brightness = 2.5
Foam.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.1016692, 0.6508875, 0.6508875), NumberSequenceKeypoint.new(0.6494689, 1.4201183, 0.4127519), NumberSequenceKeypoint.new(1, 0)})
Foam.Enabled = false
Foam.Acceleration = Vector3.new(0, -66.04029846191406, 0)
Foam.Rate = 100
Foam.Texture = "rbxassetid://8297030850"
Foam.Rotation = NumberRange.new(-90, -90)
Foam.Orientation = Enum.ParticleOrientation.VelocityParallel
Foam.Parent = Attachment

Part.Parent = workspace
end

do --// Slash
local Part = Instance.new("Part")
Part.Parent = ReplicatedStorage

local Attachment = Instance.new("Attachment")
Attachment.Parent = Part

Script.Locals.HitEffect["Slash"] = Attachment

local Crescents = Instance.new("ParticleEmitter")
Crescents.Name = "Crescents"
Crescents.Lifetime = NumberRange.new(0.19, 0.38)
Crescents.SpreadAngle = Vector2.new(-360, 360)
Crescents.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1932907, 0), NumberSequenceKeypoint.new(0.778754, 0), NumberSequenceKeypoint.new(1, 1)})
Crescents.LightEmission = 10
Crescents.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(160, 96, 255)), ColorSequenceKeypoint.new(0.3160622, Color3.fromRGB(160, 96, 255)), ColorSequenceKeypoint.new(0.5146805, Color3.fromRGB(154, 82, 255)), ColorSequenceKeypoint.new(1, Color3.fromRGB(160, 96, 255))})
Crescents.VelocitySpread = -360
Crescents.Speed = NumberRange.new(0.0826858, 0.0826858)
Crescents.Brightness = 4
Crescents.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.398774, 8.8026266, 2.2834616), NumberSequenceKeypoint.new(1, 11.477972, 1.860431)})
Crescents.Enabled = false
Crescents.ZOffset = 0.4542207
Crescents.Rate = 50
Crescents.Texture = "rbxassetid://12509373457"
Crescents.RotSpeed = NumberRange.new(800, 1000)
Crescents.Rotation = NumberRange.new(-360, 360)
Crescents.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Crescents.Parent = Attachment

Part.Parent = workspace
end

do --// Atomic Slash

local Part = Instance.new("Part")

Part.Parent = ReplicatedStorage

local Attachment = Instance.new("Attachment")
Attachment.Parent = Part

Script.Locals.HitEffect["Atomic Slash"] = Attachment

local Crescents = Instance.new("ParticleEmitter")
Crescents.Name = "Crescents"
Crescents.Lifetime = NumberRange.new(0.19, 0.38)
Crescents.SpreadAngle = Vector2.new(-360, 360)
Crescents.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1932907, 0), NumberSequenceKeypoint.new(0.778754, 0), NumberSequenceKeypoint.new(1, 1)})
Crescents.LightEmission = 10
Crescents.Color = ColorSequence.new(Color3.fromRGB(160, 96, 255))
Crescents.VelocitySpread = -360
Crescents.Speed = NumberRange.new(0.0826858, 0.0826858)
Crescents.Brightness = 4
Crescents.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.398774, 8.8026266, 2.2834616), NumberSequenceKeypoint.new(1, 11.477972, 1.860431)})
Crescents.Enabled = false
Crescents.ZOffset = 0.4542207
Crescents.Rate = 50
Crescents.Texture = "rbxassetid://12509373457"
Crescents.RotSpeed = NumberRange.new(800, 1000)
Crescents.Rotation = NumberRange.new(-360, 360)
Crescents.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Crescents.Parent = Attachment

local Glow = Instance.new("ParticleEmitter")
Glow.Name = "Glow"
Glow.Lifetime = NumberRange.new(0.16, 0.16)
Glow.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1421725, 0.6182796), NumberSequenceKeypoint.new(1, 1)})
Glow.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Glow.Speed = NumberRange.new(0, 0)
Glow.Brightness = 5
Glow.Size = NumberSequence.new(9.1873131, 16.5032349)
Glow.Enabled = false
Glow.ZOffset = -0.0565939
Glow.Rate = 50
Glow.Texture = "rbxassetid://8708637750"
Glow.Parent = Attachment

local Effect = Instance.new("ParticleEmitter")
Effect.Name = "Effect"
Effect.Lifetime = NumberRange.new(0.4, 0.7)
Effect.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid4x4
Effect.SpreadAngle = Vector2.new(360, -360)
Effect.LockedToPart = true
Effect.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1070999, 0.19375), NumberSequenceKeypoint.new(0.7761194, 0.88125), NumberSequenceKeypoint.new(1, 1)})
Effect.LightEmission = 1
Effect.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Effect.Drag = 1
Effect.VelocitySpread = 360
Effect.Speed = NumberRange.new(0.0036749, 0.0036749)
Effect.Brightness = 2.0999999
Effect.Size = NumberSequence.new(6.9680691, 9.9213123)
Effect.Enabled = false
Effect.ZOffset = 0.4777403
Effect.Rate = 50
Effect.Texture = "rbxassetid://9484012464"
Effect.RotSpeed = NumberRange.new(-150, -150)
Effect.FlipbookMode = Enum.ParticleFlipbookMode.OneShot
Effect.Rotation = NumberRange.new(50, 50)
Effect.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Effect.Parent = Attachment

local Gradient1 = Instance.new("ParticleEmitter")
Gradient1.Name = "Gradient1"
Gradient1.Lifetime = NumberRange.new(0.3, 0.3)
Gradient1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.15, 0.3), NumberSequenceKeypoint.new(1, 1)})
Gradient1.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Gradient1.Speed = NumberRange.new(0, 0)
Gradient1.Brightness = 6
Gradient1.Size = NumberSequence.new(0, 11.6261358)
Gradient1.Enabled = false
Gradient1.ZOffset = 0.9187313
Gradient1.Rate = 50
Gradient1.Texture = "rbxassetid://8196169974"
Gradient1.Parent = Attachment

local Shards = Instance.new("ParticleEmitter")
Shards.Name = "Shards"
Shards.Lifetime = NumberRange.new(0.19, 0.7)
Shards.SpreadAngle = Vector2.new(-90, 90)
Shards.Color = ColorSequence.new(Color3.fromRGB(179, 145, 253))
Shards.Drag = 10
Shards.VelocitySpread = -90
Shards.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.5705521, 0.4125001), NumberSequenceKeypoint.new(1, -0.9375)})
Shards.Speed = NumberRange.new(97.7530136, 146.9970093)
Shards.Brightness = 4
Shards.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.284774, 1.2389833, 0.1534118), NumberSequenceKeypoint.new(1, 0)})
Shards.Enabled = false
Shards.Acceleration = Vector3.new(0, -56.961341857910156, 0)
Shards.ZOffset = 0.5705321
Shards.Rate = 50
Shards.Texture = "rbxassetid://8030734851"
Shards.Rotation = NumberRange.new(90, 90)
Shards.Orientation = Enum.ParticleOrientation.VelocityParallel
Shards.Parent = Attachment

Part.Parent = workspace
end
        --// Nova
        do
            local Part = Instance.new("Part")
            Part.Parent = ReplicatedStorage

            local Attachment = Instance.new("Attachment")
            Attachment.Name = "Attachment"
            Attachment.Parent = Part

            Script.Locals.HitEffect["Nova Impact"] = Attachment

            local ParticleEmitter = Instance.new("ParticleEmitter")
            ParticleEmitter.Name = "ParticleEmitter"
            ParticleEmitter.Acceleration = Vector3.new(0, 0, 1)
            ParticleEmitter.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
                ColorSequenceKeypoint.new(0.495, Color3.fromRGB(255, 0, 0)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0)),
            })
            ParticleEmitter.Lifetime = NumberRange.new(0.5, 0.5)
            ParticleEmitter.LightEmission = 1
            ParticleEmitter.LockedToPart = true
            ParticleEmitter.Rate = 1
            ParticleEmitter.Rotation = NumberRange.new(0, 360)
            ParticleEmitter.Size = NumberSequence.new({
                NumberSequenceKeypoint.new(0, 1),
                NumberSequenceKeypoint.new(1, 10),
                NumberSequenceKeypoint.new(1, 1),
            })
            ParticleEmitter.Speed = NumberRange.new(0, 0)
            ParticleEmitter.Texture = "rbxassetid://1084991215"
            ParticleEmitter.Transparency = NumberSequence.new({
                NumberSequenceKeypoint.new(0, 0),
                NumberSequenceKeypoint.new(0, 0.1),
                NumberSequenceKeypoint.new(0.534, 0.25),
                NumberSequenceKeypoint.new(1, 0.5),
                NumberSequenceKeypoint.new(1, 0),
            })
            ParticleEmitter.ZOffset = 1
            ParticleEmitter.Parent = Attachment
            local ParticleEmitter1 = Instance.new("ParticleEmitter")
            ParticleEmitter1.Name = "ParticleEmitter"
            ParticleEmitter1.Acceleration = Vector3.new(0, 1, -0.001)
            ParticleEmitter1.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
                ColorSequenceKeypoint.new(0.495, Color3.fromRGB(255, 0, 0)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0)),
            })
            ParticleEmitter1.Lifetime = NumberRange.new(0.5, 0.5)
            ParticleEmitter1.LightEmission = 1
            ParticleEmitter1.LockedToPart = true
            ParticleEmitter1.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
            ParticleEmitter1.Rate = 1
            ParticleEmitter1.Rotation = NumberRange.new(0, 360)
            ParticleEmitter1.Size = NumberSequence.new({
                NumberSequenceKeypoint.new(0, 1),
                NumberSequenceKeypoint.new(1, 10),
                NumberSequenceKeypoint.new(1, 1),
            })
            ParticleEmitter1.Speed = NumberRange.new(0, 0)
            ParticleEmitter1.Texture = "rbxassetid://1084991215"
            ParticleEmitter1.Transparency = NumberSequence.new({
                NumberSequenceKeypoint.new(0, 0),
                NumberSequenceKeypoint.new(0, 0.1),
                NumberSequenceKeypoint.new(0.534, 0.25),
                NumberSequenceKeypoint.new(1, 0.5),
                NumberSequenceKeypoint.new(1, 0),
            })
            ParticleEmitter1.ZOffset = 1
            ParticleEmitter1.Parent = Attachment
        end
    end

    do
        do
            Script.Functions.Connection(RunService.PostSimulation, LPH_NO_VIRTUALIZE(function()
                Script.Functions.MouseAim()

                Script.Functions.Resolve()

                Script.Functions.Air()

                Script.Functions.UpdateLookAt()
            end))

            Script.Functions.Connection(RunService.PreSimulation, LPH_NO_VIRTUALIZE(function()
                Script.Functions.UpdateFieldOfView()

                Script.Functions.DotThingYes()

                Script.Functions.UpdateTargetVisuals()

                Script.Functions.AutoSelect()

                Script.Functions.UpdateSpectate()
            end))
        end

        --// Visual Connections
        do
            Script.Functions.Connection(RunService.PreSimulation, LPH_NO_VIRTUALIZE(function()
                Script.Functions.HitShit()

                Script.Functions.GunEvents()

                Script.Functions.UpdateAtmosphere()

                Script.Functions.UpdateHealth()
            end))
        end

        --// Anti Aim Connection
        do
            Script.Functions.Connection(RunService.PostSimulation, LPH_NO_VIRTUALIZE(function()
                Script.Functions.DaCoolBoyDesync()
                
                Script.Functions.VisualizeMovement()
                
                Script.Functions.CSync()

                Script.Functions.Network()

                Script.Functions.VelocityDesync()

                Script.Functions.FFlagDesync()
            end))
        end

        --// Movement Connections
        do
            Script.Functions.Connection(RunService.PostSimulation, LPH_NO_VIRTUALIZE(function()
                Script.Functions.Speed()

                Script.Functions.NoSlowdown()
            end))
        end
    end
    --// Hooks
    do
        local __namecall
        local __newindex
        local __index

        __index = hookmetamethod(game, "__index", LPH_NO_VIRTUALIZE(function(Self, Index)
            if not checkcaller() and Settings.AntiAim.CSync.Enabled and Settings.AntiAim.CSync.Spoof and Script.Locals.SavedCFrame and Index == "CFrame" and Self == LocalPlayer.Character.HumanoidRootPart then
                return Script.Locals.SavedCFrame
            end
            return __index(Self, Index)
        end))

__namecall = hookmetamethod(game, "__namecall", LPH_NO_VIRTUALIZE(function(Self, ...)
    local Arguments = {...}
    local Method = tostring(getnamecallmethod())

    if not checkcaller() and Method == "FireServer" then
        for _, Argument in pairs(Arguments) do
            if typeof(Argument) == "Vector3" then
                Script.Locals.AntiAimViewer.MouseRemote = Self
                Script.Locals.AntiAimViewer.MouseRemoteFound = true
                Script.Locals.AntiAimViewer.MouseRemoteArgs = Arguments
                Script.Locals.AntiAimViewer.MouseRemotePositionIndex = _
                WOAHHH = Arguments
                NEINIGGANEINEI = _
                if Settings.Combat.Enabled and Settings.Combat.Silent and not Settings.Combat.AntiAimViewer 
                   and Script.Locals.IsTargetting and Script.Locals.Target and not Settings.Combat.UseIndex then
                    Arguments[_] = Script.Functions.GetTargetPredictedPosition().Position
                end

            elseif typeof(Argument) == "table" then
                for j, element in ipairs(Argument) do
                    if typeof(element) == "Vector3" then
                        Script.Locals.AntiAimViewer.MouseRemote = Self
                        Script.Locals.AntiAimViewer.MouseRemoteFound = true
                        Script.Locals.AntiAimViewer.MouseRemoteArgs = Arguments
                        Script.Locals.AntiAimViewer.MouseRemotePositionIndex = j
                       WOAHHH = Arguments
                       NEINIGGANEINEI = j
                        if Settings.Combat.Enabled and Settings.Combat.Silent and not Settings.Combat.AntiAimViewer 
                           and Script.Locals.IsTargetting and Script.Locals.Target and not Settings.Combat.UseIndex then
                            Argument[j] = Script.Functions.GetTargetPredictedPosition().Position
                        end
                    end
                end
            end
        end
        return __namecall(Self, unpack(Arguments))
    end
    return __namecall(Self, ...)
end))

Sexy[1] = hookmetamethod(LocalPlayer:GetMouse(), "__index", LPH_NO_VIRTUALIZE(function(self, index)
    if index == "Hit" and Settings.Combat.Enabled and Settings.Combat.Silent and not Settings.Combat.AntiAimViewer and Script.Locals.IsTargetting and Script.Locals.Target and Settings.Combat.UseIndex then
        
            local position = CFrame.new((Script.Functions.GetTargetPredictedPosition().Position))
            
            return position
    end
    return Sexy[1](self, index)
end))
    end
    do
local library = loadstring(game:HttpGet("https://pastebin.com/raw/KECRX73j"))(); -- creds to portal

do
    local window = library:Window({Name = [[Affinity <font color="rgb(255,255,255)">.lua</font>]], Size = Vector2.new(450,450)});
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local Outline = Instance.new("ImageButton")
Outline.Name = "Outline"
Outline.AnchorPoint = Vector2.new(0.5, 0.5)
Outline.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Outline.BorderColor3 = Color3.fromRGB(0, 0, 0)
Outline.Position = UDim2.new(1, -32, 0, 10)
Outline.Size = UDim2.new(0, 50, 0, 50)
Outline.AutoButtonColor = false
Outline.Image = "rbxassetid://10709781919"
Outline.ImageColor3 = Color3.fromRGB(255, 209, 220)
Outline.ImageTransparency = 0 -- Ensure image is visible
Outline.ZIndex = 2
Outline.Parent = ScreenGui

local Inline = Instance.new("Frame")
Inline.Name = "Inline"
Inline.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Inline.BorderColor3 = Color3.fromRGB(0, 0, 0)
Inline.BorderSizePixel = 0
Inline.Position = UDim2.new(0, 1, 0, 1)
Inline.Size = UDim2.new(1, -2, 1, -2)
Inline.ZIndex = 1
Inline.Parent = Outline

local Accent = Instance.new("Frame")
Accent.Name = "Accent"
Accent.BackgroundColor3 = Color3.fromRGB(255, 209, 220)
Accent.BorderColor3 = Color3.fromRGB(20, 20, 20)
Accent.BorderSizePixel = 0
Accent.Position = UDim2.new(0, 0, 0, 0)
Accent.Size = UDim2.new(1, 0, 0, 2)
Accent.ZIndex = 1
Accent.Parent = Inline

local UIGradient = Instance.new("UIGradient")
UIGradient.Name = "UIGradient"
UIGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(145, 145, 145)),
})
UIGradient.Rotation = 90
UIGradient.Parent = Accent

Outline.MouseButton1Click:Connect(function()
    library:SetOpen(not library.Open)
    if library.Open then
        Outline.Image = "rbxassetid://10709781919"
    else
        Outline.Image = "rbxassetid://10709782044"
    end
end)


    do -- tabs
        local aiming = window:Page({Name = "Combat"});
        local looking = window:Page({Name = "Visuals"});
        local skibiding = window:Page({Name = "Anti"});
        local extrayk = window:Page({Name = "Extra"});
        
        do --
            local main, trgt, cam = aiming:MultiSection({Sections = {"Main", "Target", "Cam"}, Zindex = 5, Side = "Left", Size = 315}) 

            do -- silent elements
                main:Toggle({Name = "Master Switch", Callback = function(v)
                    Settings.Combat.Enabled = v
                end})

                main:Toggle({Name = "Target", Callback = function(v)
                    Settings.Combat.Silent = v
                end})

                main:Toggle({Name = "Cam", Callback = function(v)
                    Settings.Combat.Camera = v
                end})

                main:Button({Name = "Load Tool", Callback = function()
                if ToolAlreadyLoaded then
                library:Notification("Already Loaded.", 5, library.Accent)
                return
                end
                ToolAlreadyLoaded = true
                local Tobol = Instance.new("Tool")
                Tobol.RequiresHandle = false
                Tobol.Name = "Lock Tool"
                Tobol.Parent = game.Players.LocalPlayer.Backpack
                local player = game.Players.LocalPlayer
                player.CharacterRemoving:Connect(function()
                Tobol.Parent = game.Players.LocalPlayer.Backpack
                end)
                Tobol.Activated:Connect(function()
                    if Settings.Combat.Enabled then
                    Script.Locals.IsTargetting = not Script.Locals.IsTargetting
                        local NewTarget = Script.Functions.GetClosestPlayer()
                    Script.Locals.Target = Script.Locals.IsTargetting and NewTarget.Character and NewTarget or nil

                        if Settings.Combat.Alerts and Script.Locals.Target ~= nil then
                            library:Notification(string.format("Targetting: %s", Script.Locals.Target.Character.Humanoid.DisplayName), 5, library.Accent)
                        end
                    end
                end)
                end})

                main:Button({Name = "Load Button", Callback = function()
                if ButtonAlreadyLoaded then
                library:Notification("Already Loaded.", 5, library.Accent)
                return
                end
                ButtonAlreadyLoaded = true
do
local ScreeenGui = Instance.new("ScreenGui")
local Fraame = Instance.new("Frame")
local TeextButton = Instance.new("ImageButton")
local UIITextSizeConstraint = Instance.new("UITextSizeConstraint")
ScreeenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreeenGui.ResetOnSpawn = false
ScreeenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Fraame.Parent = ScreeenGui
Fraame.BackgroundColor3 = Color3.fromRGB(0,0,0)
Fraame.BackgroundTransparency = 0.5
Fraame.Position = UDim2.new(1, -96, 0, -32)
Fraame.Size = UDim2.new(0, 90, 0, 90)
Fraame.Draggable = true

TeextButton.Parent = Fraame
TeextButton.BackgroundColor3 = Color3.fromRGB(0,0,0)
TeextButton.BackgroundTransparency = 1
TeextButton.Size = UDim2.new(0, 75, 0, 75)
TeextButton.AnchorPoint = Vector2.new(0.5,0.5)
TeextButton.Position = UDim2.new(0.5, 0, 0.5, 0)
TeextButton.Image = "rbxassetid://10747366027"

local uiiCorner = Instance.new("UICorner", Fraame)
uiiCorner.CornerRadius = UDim.new(0, 8)

TeextButton.MouseButton1Down:Connect(function()
                    if Settings.Combat.Enabled then
                    Script.Locals.IsTargetting = not Script.Locals.IsTargetting
                        local NewTarget = Script.Functions.GetClosestPlayerNumbah()
                    Script.Locals.Target = Script.Locals.IsTargetting and NewTarget.Character and NewTarget or nil

                        if Settings.Combat.Alerts and Script.Locals.Target ~= nil  then
                            library:Notification(string.format("Targetting: %s", Script.Locals.Target.Character.Humanoid.DisplayName), 5, library.Accent)
                        end
                    end
--//rbxassetid://10734985247
if Script.Locals.Target then
  TeextButton.Image = "rbxassetid://10723434711"
else
  TeextButton.Image = "rbxassetid://10747366027"
end
end)
local inputService   = game:GetService("UserInputService")
UIITextSizeConstraint.Parent = TeextButton
UIITextSizeConstraint.MaxTextSize = 30
function draggable(a)local b=inputService;local c;local d;local e;local f;local function g(h)local i=h.Position-e;a.Position=UDim2.new(f.X.Scale,f.X.Offset+i.X,f.Y.Scale,f.Y.Offset+i.Y) end;a.InputBegan:Connect(function(h)if h.UserInputType==Enum.UserInputType.MouseButton1 or h.UserInputType==Enum.UserInputType.Touch then c=true;e=h.Position;f=a.Position;h.Changed:Connect(function()if h.UserInputState==Enum.UserInputState.End then c=false end end)end end)a.InputChanged:Connect(function(h)if h.UserInputType==Enum.UserInputType.MouseMovement or h.UserInputType==Enum.UserInputType.Touch then d=h end end)b.InputChanged:Connect(function(h)if h==d and c then g(h)end end)end
draggable(Fraame)
end
                end})

                main:List({
                    Name = "Aim Part",
                    Options = {"HumanoidRootPart", "UpperTorso", "HumanoidRootPart", "LowerTorso"},
                    Default = "HumanoidRootPart",
                    Callback = function(v)
                        Settings.Combat.AimPart = v
                    end
                })

                main:Textbox({Name = "Prediction", Default = "0.14", Callback = function(v)
                    Settings.Combat.Prediction.Horizontal = tonumber(v)
                    end
                })

                main:Textbox({Name = "Jump Offset", Default = "0", Callback = function(v)
                    Settings.Combat.Air.JumpOffset.Offset = tonumber(v)
                    end
                })

                main:Toggle({Name = "Auto Pred", Callback = function(v)
                    Settings.Combat.PingBased = v
                end})
                RunService.Stepped:connect(function()
                    if Settings.Combat.PingBased then
                        pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
                        split = string.split(pingvalue,'(')
                        ping = tonumber(split[1])
                        Settings.Combat.Prediction.Horizontal = tonumber(math.floor((0.1+(ping*0.000654837948)) * 10^6) / 10^6)
                    end
                end)
            end

            do -- Target

                trgt:Toggle({Name = "Look At", Callback = function(v)
                    Settings.Combat.LookAt = v
                end})

                trgt:Toggle({Name = "View At", Callback = function(v)
                    Settings.Combat.Spectate = v
                end})

                trgt:Toggle({Name = "Anti Aim Viewer", Callback = function(v)
                    Settings.Combat.AntiAimViewer = v
                end})

                trgt:Toggle({Name = "Mouse.Hit Index", Callback = function(v)
                    Settings.Combat.UseIndex = v
                end})

            end

            do -- Cam

                cam:List({
                    Name = "Easing Style",
                    Options = {"Linear","Sine","Bounce","Elastic","Back","Quad","Quart","Quint","Exponential","Circular","Cubic"},
                    Default = "Sine",
                    Callback = function(v)
                        Settings.Combat.EasingStyle = v
                    end
                })

                cam:List({
                    Name = "Easing Direction",
                    Options = {'In', 'Out', 'InOut'},
                    Default = "In",
                    Callback = function(v)
                        Settings.Combat.EasingDirection = v
                    end
                })

                cam:Textbox({Name = "Smoothing", Default = "1", Callback = function(v)
                    Settings.Combat.Smoothing.Horizontal = v
                    end
                })

            end

        end
        do
           local rslvr = aiming:Section({Name = "Resolver", Side = "Left", Size = 105})
           do
                rslvr:Toggle({Name = "Enabled", Callback = function(v)
                    Settings.Combat.Resolver.Enabled = v
                end})

                rslvr:Textbox({Name = "Smoothness", Default = "0.5", Callback = function(v)
                    Settings.Combat.Resolver.Smoothness = tonumber(v)
                    end
                })
           end
       end
        do
           local trgbot = aiming:Section({Name = "Triggerbot", Side = "Right", Size = 155})
           do
                trgbot:Toggle({Name = "Enabled", Callback = function(v)
                    Settings.Combat.TriggerBot.Enabled = v
                end})

                trgbot:Toggle({Name = "Target Only", Callback = function(v)
                    Settings.Combat.TriggerBot.TargetOnly = v
                end})

                trgbot:Textbox({Name = "FOV Size", Default = "30", Callback = function(v)
                    Settings.Combat.TriggerBot.FOV.Size = v
                    end
                })

                trgbot:Textbox({Name = "Delay", Default = "0", Callback = function(v)
                    Settings.Combat.TriggerBot.Delay = tonumber(v)
                    end
                })

           end
        end
        do
        local strafearea = aiming:Section({Name = "Strafe", Side = "Right", Size = 245})
            do

                strafearea:Toggle({Name = "Enabled", Callback = function(v)
                    Settings.AntiAim.CSync.Enabled = v
                end})

                strafearea:Toggle({Name = "Spoof", Callback = function(v)
                    Settings.AntiAim.CSync.Spoof = v
                    Settings.AntiAim.CSync.Visualize.Enabled = v
                end})

                strafearea:Toggle({Name = "Randomized", Callback = function(v)
                        if v then
                                Settings.AntiAim.CSync.Type = "Random Target"
                            else
                                Settings.AntiAim.CSync.Type = "Target Strafe"
                            end
                end})

                strafearea:Textbox({Name = "Randomized Amount", Default = "1", Callback = function(v)
                    Settings.AntiAim.CSync.RandomDistance = tonumber(v)
                    end
                })

                strafearea:Textbox({Name = "Speed", Default = "1", Callback = function(v)
                    Settings.AntiAim.CSync.TargetStrafe.Speed = tonumber(v)
                    end
                })

                strafearea:Textbox({Name = "Height", Default = "1", Callback = function(v)
                    Settings.AntiAim.CSync.TargetStrafe.Height = tonumber(v)
                    end
                })

                strafearea:Textbox({Name = "Distance", Default = "1", Callback = function(v)
                    Settings.AntiAim.CSync.TargetStrafe.Distance = tonumber(v)
                    end
                })

            end
        end
        do -- World Visuals
        local wrldstff = looking:Section({Name = "Environment", Side = "Left", Size = 340})
            do

                wrldstff:Toggle({Name = "Enabled", Callback = function(v)
                    Settings.Visuals.World.Enabled = v
                end})

                wrldstff:Toggle({Name = "Fog", Callback = function(v)
                    Settings.Visuals.World.Fog.Enabled = v
                end}):Colorpicker({Name = "color", Default = Color3.fromRGB(255,255,255), Callback = function(v)
                    Settings.Visuals.World.Fog.Color = v
                    end})

                wrldstff:Textbox({Name = "Fog Start", Default = "1000", Callback = function(v)
                    Settings.Visuals.World.Fog.Start = v
                    end
                })

                wrldstff:Textbox({Name = "Fog End", Default = "1000", Callback = function(v)
                    Settings.Visuals.World.Fog.End = v
                    end
                })

                wrldstff:Toggle({Name = "Ambient", Callback = function(v)
                    Settings.Visuals.World.Ambient.Enabled = v
                end}):Colorpicker({Name = "color", Default = Color3.fromRGB(255,255,255), Callback = function(v)
                    Settings.Visuals.World.Ambient.Color = v
                    end})

                wrldstff:Toggle({Name = "Clock Time", Callback = function(v)
                    Settings.Visuals.World.ClockTime.Enabled = v
                end})

                wrldstff:Textbox({Name = "Clock Time", Default = "24", Callback = function(v)
                    Settings.Visuals.World.ClockTime.Value = v
                    end
                })

                wrldstff:Toggle({Name = "World Brightness", Callback = function(v)
                    Settings.Visuals.World.Brightness.Enabled = v
                end})

                wrldstff:Textbox({Name = "Brightness Amount", Default = "0", Callback = function(v)
                    Settings.Visuals.World.Brightness.Value = v
                    end
                })

            end
        end
        do
        local onhtstff = looking:Section({Name = "On Hit", Side = "Right", Size = 225})
            do
                onhtstff:Toggle({Name = "Enabled", Callback = function(v)
                    Settings.Visuals.OnHit.Enabled = v
                end})

                onhtstff:Toggle({Name = "Effect", Callback = function(v)
                    Settings.Visuals.OnHit.Effect.Enabled = v
                end}):Colorpicker({Name = "color", Default = Color3.fromRGB(255,255,255), Callback = function(v)
                    Settings.Visuals.OnHit.Effect.Color = v
                end})

                onhtstff:List({
                    Name = "Hit Effect",
                    Options = {"Nova Impact","Crescent Slash","Crescent Slash","Coom","Cosmic Explosion","Slash","Atomic Slash"},
                    Default = "Coom",
                    Callback = function(v)
                        HitStyleThing = v
                    end
                })

                onhtstff:Toggle({Name = "Clone", Callback = function(v)
                    Settings.Visuals.OnHit.Chams.Enabled = v
                end}):Colorpicker({Name = "color", Default = Color3.fromRGB(255,255,255), Callback = function(v)
                    Settings.Visuals.OnHit.Chams.Color = v
                end})

                onhtstff:Toggle({Name = "Sound", Callback = function(v)
                    Settings.Visuals.OnHit.Sound.Enabled = v
                end})

                onhtstff:Textbox({Name = "Volume", Default = "2", Callback = function(v)
                    Settings.Visuals.OnHit.Sound.Volume = v
                    end
                })

                onhtstff:List({
                    Name = "Hit Sound",
                    Options = {"fatality.wav","hentai2.wav","stony.wav","sparkle.wav","phonk.wav","hentai4.wav","hentai.wav","bell.wav","applepay.wav","amongus.wav","cock.wav","combobreak.wav","bubble.wav","hentai3.wav","cod.wav","bepis.wav"},
                    Default = "hentai4.wav",
                    Callback = function(v)
                        Settings.Visuals.OnHit.Sound.Value = v
                    end
                })

            end
        end
        do
        local trgtstff = looking:Section({Name = "Target Visuals", Side = "Right", Size = 105})
            do
                trgtstff:Toggle({Name = "Dot", Callback = function(v)
                    Settings.Combat.Visuals.Dot.Enabled = v
                end})
                trgtstff:Toggle({Name = "Cham", Callback = function(v)
                    Settings.Combat.Visuals.Chams.Enabled = v
                end})
                trgtstff:Toggle({Name = "Tracer", Callback = function(v)
                     Settings.Combat.Visuals.Tracer.Enabled = v
                end})
            end
        end
        do
        local ESPstff = looking:Section({Name = "ESP", Side = "Right", Size = 305})
            do
                ESPstff:Toggle({Name = "Master Switch", Callback = function(v)
                     getgenv().taffy_esp.enabled = v
                end})
                ESPstff:Toggle({Name = "Box", Callback = function(v)
                     getgenv().taffy_esp.box.boxes = v
                end})
                ESPstff:List({
                    Name = "Box Type",
                    Options = {"2D","3D"},
                    Default = "2D",
                    Callback = function(v)
                        getgenv().taffy_esp.box.boxtype = v
                    end
                })
                ESPstff:Toggle({Name = "Box Filled", Callback = function(v)
                     getgenv().taffy_esp.box.filled = v
                end})
                ESPstff:Toggle({Name = "Box Outline", Callback = function(v)
                     getgenv().taffy_esp.box.outline = v
                end})
                ESPstff:Toggle({Name = "Healthbar", Callback = function(v)
                     getgenv().taffy_esp.box.healthbar = v
                end})
                ESPstff:Toggle({Name = "Health Text", Callback = function(v)
                     getgenv().taffy_esp.box.healthtext = v
                end})
                ESPstff:Toggle({Name = "Name", Callback = function(v)
                     getgenv().taffy_esp.name.enabled = v
                end})
                ESPstff:Toggle({Name = "Name Outline", Callback = function(v)
                     getgenv().taffy_esp.name.outline = v
                end})
                ESPstff:Toggle({Name = "Skeleton", Callback = function(v)
                     getgenv().taffy_esp.Skeletons.Enabled = v
                end})
                ESPstff:Toggle({Name = "Fade", Callback = function(v)
                     getgenv().taffy_esp.misc.fade = v
                end})
                ESPstff:Textbox({Name = "Fade Speed", Default = "4", Callback = function(v)
                    getgenv().taffy_esp.misc.fadespeed = tonumber(v)
                    end
                })
                ESPstff:Toggle({Name = "Target Only", Callback = function(v)
                     getgenv().taffy_esp.misc.target = v
                end})
            end
        end
        do
        local crsshrstff = looking:Section({Name = "Crosshair", Side = "Left", Size = 545})
            do
                crsshrstff:Toggle({Name = "Enabled", Callback = function(v)
                     crosshair.enabled = v
                end})
                crsshrstff:Textbox({Name = "Refresh Rate", Default = "0", Callback = function(v)
                    crosshair.refreshrate = tonumber(v)
                    end
                })
                crsshrstff:Textbox({Name = "Lines", Default = "4", Callback = function(v)
                    crosshair.lines = tonumber(v)
                    end
                })
                crsshrstff:Textbox({Name = "Width", Default = "1.8", Callback = function(v)
                    crosshair.width = tonumber(v)
                    end
                })
                crsshrstff:Textbox({Name = "Length", Default = "15", Callback = function(v)
                    crosshair.length = tonumber(v)
                    end
                })
                crsshrstff:Textbox({Name = "Radius", Default = "11", Callback = function(v)
                    crosshair.radius = tonumber(v)
                    end
                })
                crsshrstff:Toggle({Name = "Spin", Callback = function(v)
                     crosshair.spin = v
                end})
                crsshrstff:Textbox({Name = "Spin Speed", Default = "150", Callback = function(v)
                    crosshair.spin_speed = tonumber(v)
                    end
                })
                crsshrstff:Textbox({Name = "Spin Max", Default = "340", Callback = function(v)
                    crosshair.spin_max = tonumber(v)
                    end
                })
                crsshrstff:List({
                    Name = "Spin Style",
                    Options = {"Linear","Sine","Bounce","Elastic","Back","Quad","Quart","Quint","Exponential","Circular","Cubic"},
                    Default = "Circular",
                    Callback = function(v)
                        crosshair.spin_style = Enum.EasingStyle[v]
                    end
                })
                crsshrstff:Toggle({Name = "Resize", Callback = function(v)
                     crosshair.resize = v
                end})
                crsshrstff:Textbox({Name = "Resize Speed", Default = "150", Callback = function(v)
                    crosshair.resize_speed = tonumber(v)
                    end
                })
                crsshrstff:Textbox({Name = "Resize Minimum", Default = "5", Callback = function(v)
                    crosshair.resize_min = tonumber(v)
                    end
                })
                crsshrstff:Textbox({Name = "Resize Max", Default = "22", Callback = function(v)
                    crosshair.resize_max = tonumber(v)
                    end
                })
                crsshrstff:Toggle({Name = "Stick To Target", Callback = function(v)
                     crosshair.sticky = v
                end})
            end
        end
        do
        local slfstff = looking:Section({Name = "Local Player", Side = "Left", Size = 105})
            do
                slfstff:Toggle({Name = "Balls", Callback = function(v)
                     Settings.Combat.Skibidi = v
                end})
utility = utility or {}

local Settings = {
    Visuals = {
        SelfESP = {
            Trail = {
                InsideColor = Color3.fromRGB(255,255,255),
                OutsideColor = Color3.fromRGB(255,255,255),
                LifeTime = 10,
                Width = 0.08
            }
        }
    }
}

                utility.trail_character = function(Bool)
                    local player = game.Players.LocalPlayer
                    local character = player.Character or player.CharacterAdded:Wait()
                    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

                    if Bool then
                        local invisiblePart = Instance.new("Part", workspace)
                        invisiblePart.Name = "TrailPart"
                        invisiblePart.Size = Vector3.new(0.1, 0.1, 0.1)
                        invisiblePart.Transparency = 1
                        invisiblePart.Anchored = true
                        invisiblePart.CanCollide = false
                        invisiblePart.CFrame = humanoidRootPart.CFrame
        
                        local BlaBla = Instance.new("Trail", invisiblePart)
                        BlaBla.Name = "BlaBla"
        
                        local attachment0 = Instance.new("Attachment", invisiblePart)
                        attachment0.Position = Vector3.new(0, 1, 0)
                        local attachment1 = Instance.new("Attachment", invisiblePart)
                        attachment1.Position = Vector3.new(0, -1, 0)

                        BlaBla.Attachment0 = attachment0
                        BlaBla.Attachment1 = attachment1
        
                        BlaBla.Color = ColorSequence.new({
                            ColorSequenceKeypoint.new(0, Settings.Visuals.SelfESP.Trail.InsideColor),
                            ColorSequenceKeypoint.new(1, Settings.Visuals.SelfESP.Trail.OutsideColor)
        })
                        BlaBla.Lifetime = Settings.Visuals.SelfESP.Trail.LifeTime
                        BlaBla.Transparency = NumberSequence.new(0, 0)
                        BlaBla.LightEmission = 10
                        BlaBla.Brightness = 450
                        BlaBla.LightInfluence = 10
                        BlaBla.WidthScale = NumberSequence.new(Settings.Visuals.SelfESP.Trail.Width)
                        game:GetService("RunService").PreSimulation:Connect(function()
                            if humanoidRootPart then
                                invisiblePart.CFrame = humanoidRootPart.CFrame
                            end
                            
                            
                            
                        end)

                    else
                        for _, child in ipairs(workspace:GetChildren()) do
                            if child:IsA("Part") and child.Name == 'TrailPart' then
                                child:Destroy()
                            end
                        end
                    end
                end
                local realtoggle
                local function connectCharacterAddedj()
                    LocalPlayer.CharacterAdded:Connect(function()
                        utility.trail_character(realtoggle)
                    end)
                end
                connectCharacterAddedj()
                LocalPlayer.CharacterRemoving:Connect(function()
                utility.trail_character(realtoggle)
                end)
                slfstff:Toggle({Name = "Trail", Callback = function(v)
                    utility.trail_character(v)
                    realtoggle = v
                end})
            end
        end
        do
        local mcrostff = extrayk:Section({Name = "Macro", Side = "Left", Size = 105})
            do
                mcrostff:Button({Name = "Load Macro", Callback = function()
                if MacroAlreadLoaded then
                library:Notification("Already Loaded.", 5, library.Accent)
                return
                end
                MacroAlreadLoaded = true
	local MobileCameraFramework = {}
	local runservice = game:GetService("RunService")
	local CAS = game:GetService("ContextActionService")
	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local root = character:WaitForChild("HumanoidRootPart")
	local humanoid = character.Humanoid
	local camera = workspace.CurrentCamera
	local MAX_LENGTH = 900000
	local active = false --1.7
	local ENABLED_OFFSET = CFrame.new(0, 0, 0)
	local DISABLED_OFFSET = CFrame.new(0, 0, 0)
local rootPos = Vector3.new(0,0,0)
local function UpdatePos()
if player.Character and player.Character:FindFirstChildOfClass"Humanoid" and player.Character:FindFirstChildOfClass"Humanoid".RootPart then
rootPos = player.Character:FindFirstChildOfClass"Humanoid".RootPart.Position
end
end
local function UpdateAutoRotate(BOOL)
if player.Character and player.Character:FindFirstChildOfClass"Humanoid" then
player.Character:FindFirstChildOfClass"Humanoid".AutoRotate = BOOL
end
end
	local function GetUpdatedCameraCFrame()
if game:GetService"Workspace".CurrentCamera then
return CFrame.new(rootPos, Vector3.new(game:GetService"Workspace".CurrentCamera.CFrame.LookVector.X * MAX_LENGTH, rootPos.Y, game:GetService"Workspace".CurrentCamera.CFrame.LookVector.Z * MAX_LENGTH))
end
end
	local function EnableShiftlock()
UpdatePos()
		--UpdateAutoRotate(false)
if player.Character and player.Character:FindFirstChildOfClass"Humanoid" and player.Character:FindFirstChildOfClass"Humanoid".RootPart then
player.Character:FindFirstChildOfClass"Humanoid".RootPart.CFrame = GetUpdatedCameraCFrame()
end
if game:GetService"Workspace".CurrentCamera then
game:GetService"Workspace".CurrentCamera.CFrame = camera.CFrame * ENABLED_OFFSET
end
	end
	local function DisableShiftlock()
UpdatePos()
		--UpdateAutoRotate(true)
		if game:GetService"Workspace".CurrentCamera then
game:GetService"Workspace".CurrentCamera.CFrame = camera.CFrame * DISABLED_OFFSET
end
		pcall(function()
			active:Disconnect()
			active = nil
		end)
	end
	active = false
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextButton = Instance.new("ImageLabel")
local TextLabel = Instance.new("TextButton")
local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0,0,0)
Frame.BackgroundTransparency = 0.5
Frame.Position = UDim2.new(1, -128, 0, 0)
Frame.Size = UDim2.new(0, 90, 0, 32)

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(0,0,0)
TextButton.BackgroundTransparency = 1
TextButton.Size = UDim2.new(0, 26, 0, 26)
TextButton.AnchorPoint = Vector2.new(0,0.5)
TextButton.Position = UDim2.new(0.05, 0, 0.5, 0)
TextButton.Image = "rbxassetid://10734923214"
TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(0,0,0)
TextLabel.BackgroundTransparency = 1
TextLabel.Size = UDim2.new(0, 52, 0, 26)
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.Position = UDim2.new(0.65, 0, 0.5, 0)
TextLabel.Font = Enum.Font.Arimo
TextLabel.Text = "Macro"
TextLabel.TextColor3 = Color3.fromRGB(255,255,255)
TextLabel.TextScaled = true
TextLabel.TextSize = 35
TextLabel.TextStrokeColor3 = Color3.fromRGB(0,0,0)
TextLabel.TextStrokeTransparency = 1

local uiCorner = Instance.new("UICorner", Frame)
uiCorner.CornerRadius = UDim.new(0, 8)

local MCenabled = false
TextLabel.MouseButton1Down:Connect(function()
MCenabled = not MCenabled
print(MCenabled)
if MCenabled then
  TextButton.Image = "rbxassetid://10735024209"
else
  TextButton.Image = "rbxassetid://10734923214"
  DisableShiftlock()
end
end)
UITextSizeConstraint.Parent = TextLabel
UITextSizeConstraint.MaxTextSize = 30
local playeruh = game.Players.LocalPlayer
local function onCharacterAdded(character)
    ScreenGui.Parent = playeruh.PlayerGui
end
local function connectCharacterAdded()
    playeruh.CharacterAdded:Connect(onCharacterAdded)
end
connectCharacterAdded()
playeruh.CharacterRemoving:Connect(function()
    ScreenGui.Parent = nil
end)

local UserInputService = game:GetService("UserInputService")

local dragging = false
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)

function ShiftLock()
	if MCenabled then
		if not active then
			active = runservice.PreSimulation:Connect(function()
			    UpdateAutoRotate(false)
				EnableShiftlock()
			end)
		else
		    UpdateAutoRotate(true)
			DisableShiftlock()
		end
	end
end

while task.wait(Settings.Misc.Movement.Macro.Speed) do
  ShiftLock()
end
                end})
                mcrostff:Textbox({Name = "Delay", Default = "0", Callback = function(v)
                    Settings.Misc.Movement.Macro.Speed = v
                    end
                })
            end
        end
        do
        local cfrmspdstff = extrayk:Section({Name = "CFrame", Side = "Right", Size = 105})
            do
                cfrmspdstff:Button({Name = "Load Speed", Callback = function()
                if MacroAlreadLoaded then
                library:Notification("Already Loaded.", 5, library.Accent)
                return
                end
                MacroAlreadLoaded = true
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextButton = Instance.new("ImageLabel")
local TextLabel = Instance.new("TextButton")
local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0,0,0)
Frame.BackgroundTransparency = 0.5
Frame.Position = UDim2.new(1, -128, 0, 0)
Frame.Size = UDim2.new(0, 90, 0, 32)

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(0,0,0)
TextButton.BackgroundTransparency = 1
TextButton.Size = UDim2.new(0, 26, 0, 26)
TextButton.AnchorPoint = Vector2.new(0,0.5)
TextButton.Position = UDim2.new(0.05, 0, 0.5, 0)
TextButton.Image = "rbxassetid://10734923214"
TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(0,0,0)
TextLabel.BackgroundTransparency = 1
TextLabel.Size = UDim2.new(0, 52, 0, 26)
TextLabel.AnchorPoint = Vector2.new(0.5,0.5)
TextLabel.Position = UDim2.new(0.65, 0, 0.5, 0)
TextLabel.Font = Enum.Font.Arimo
TextLabel.Text = "Speed"
TextLabel.TextColor3 = Color3.fromRGB(255,255,255)
TextLabel.TextScaled = true
TextLabel.TextSize = 35
TextLabel.TextStrokeColor3 = Color3.fromRGB(0,0,0)
TextLabel.TextStrokeTransparency = 1

local uiCorner = Instance.new("UICorner", Frame)
uiCorner.CornerRadius = UDim.new(0, 8)

local MCenabled = false
TextLabel.MouseButton1Down:Connect(function()
Settings.Misc.Movement.Speed.Enabled = not Settings.Misc.Movement.Speed.Enabled
if Settings.Misc.Movement.Speed.Enabled then
  TextButton.Image = "rbxassetid://10735024209"
else
  TextButton.Image = "rbxassetid://10734923214"
end
end)
UITextSizeConstraint.Parent = TextLabel
UITextSizeConstraint.MaxTextSize = 30
local playeruh = game.Players.LocalPlayer
local function onCharacterAdded()
    ScreenGui.Parent = playeruh.PlayerGui
end
local function connectCharacterAdded()
    playeruh.CharacterAdded:Connect(onCharacterAdded)
end
connectCharacterAdded()
playeruh.CharacterRemoving:Connect(function()
    ScreenGui.Parent = nil
end)

local UserInputService = game:GetService("UserInputService")

local dragging = false
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)
                end})
                cfrmspdstff:Textbox({Name = "Speed", Default = "2", Callback = function(v)
                    Settings.Misc.Movement.Speed.Amount = v
                    end
                })
            end
        end
    end
end
end
end

load()
